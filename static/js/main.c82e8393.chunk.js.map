{"version":3,"sources":["astar/Cell.js","utility_components/BackButton.js","utility_components/ClearButton.js","astar/components/NavBar.js","astar/Draw.js","dijkstra/Dijkstra.js","backtracking/BackTracking.js","astar/AStar.js","backtracking/Cell.js","backtracking/components/NavBar.js","sorting/components/Graph.js","sorting/components/sortingAlgos/mergesort.js","sorting/components/sortingAlgos/bubblesort.js","sorting/components/sortingAlgos/selectionsort.js","sorting/components/sortingAlgos/insertionsort.js","sorting/components/sortingAlgos/quicksort.js","sorting/components/animations/mergesort_animations.js","sorting/components/animations/bubblesort_animations.js","sorting/components/animations/selectionsort_animations.js","sorting/components/animations/quicksort_animations.js","sorting/components/animations/insertionsort_animations.js","linearsearch/LinearSearch.js","binarysearch/BinarySearch.js","sorting/components/Menu.js","sorting/components/SortingVisualizer.js","sorting/Sorting.js","utility_components/SearchButton.js","linearsearch/NavBar.js","tsp/Point.js","utility_components/StartButton.js","tsp/NavBar.js","tsp/GeneticAlgo.js","tsp/TSP.js","App.js","index.js"],"names":["Cell","i","j","rows","cols","this","f","g","h","neighbours","prev","undefined","wall","Math","random","push","BackButton","onBackButtonClick","props","onClick","className","React","Component","ClearButton","onClearButtonClick","NavBar","stage","algo","showingCompleteGrid","p5","grid","length","breadth","start","end","x","y","fill","stroke","rect","showingOpenSet","openSet","showingclosedSet","closedSet","showingPath","path","xyz","Array","current","noSolution","solution","reLoad","flag","Dijkstra","state","componentDidUpdate","cleaning","initializeGrid","initializeStartAndEnd","componentDidMount","setup","parent","createCanvas","windowWidth","windowHeight","initializeCanvas","windowResized","width","height","position","addNeighbours","draw","background","lowest_f_value_index","removeFromArray","neighbour","includes","tempG","updateNeighbourScore","console","log","lowestIndex","mousePressed","e","mouseX","mouseY","floor","setState","array","element","splice","visited","walls","next","stack","BackTracking","canvasParentRef","frameRate","cell","showGrid","noStroke","checkNeighbours","removeWalls","pop","noFill","strokeWeight","line","top","index","right","bottom","left","AStar","heuristic","sqrt","Graph","graph","map","num","id","style","backgroundColor","getMergeSortAnimations","animations","auxArray","slice","mergesort","mid","k","merge","getBubbleSortAnimations","n","temp","bubblesort","getSelectionSortAnimations","maxi","selectionsort","getInsertionSortAnimations","insertionsort","getQuickSortAnimations","quicksort","pIndex","pivot","partition","randomisedPartition","animateMergeSort","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","PRIMARY_COLOR","animateBubbleSort","decider","animateSelectionSort","animateQuickSort","animateInsertionSort","lo","hi","Menu","generateNewArray","onGenerateNewArray","a","getElementById","disabled","class","SortingVisualizer","Sorting","resetArray","SearchButton","onSearchButtonClick","placeholder","key","found","LinearSearch","showArray","textSize","text","value","BinarySearch","sort","b","Point","r","StartButton","onStartButtonClick","initializePopulation","population","order","populationSize","shuffle","calcFitness","points","fitness","d","calcDist","totalFitness","normalizeFitness","sum","x1","y1","getCurrentBest","best","nextGeneration","newPopulation","newOrder","crossOver","getOne","mutate","list","prob","order1","order2","Infinity","idx","mutationRate","indexA","swap","bestFitness","bestPath","complete","TSP","prevWidth","prevHeight","showFinalPath","noCursor","ellipse","showPoints","currentBestIndex","currentBestFitness","currentBestPath","showLines","calcPathDistance","dist","beginShape","vertex","endShape","App","option","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c82e8393.chunk.js","sourcesContent":["class Cell{\r\n    constructor(i, j, rows, cols){\r\n        this.f = 0;\r\n        this.g = 0;\r\n        this.h = 0;\r\n        this.i = i;\r\n        this.j = j;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n        this.neighbours = [];\r\n        this.prev = undefined;\r\n        this.wall = false;\r\n        if(Math.random(1) < 0.4)\r\n            this.wall = true;\r\n    }\r\n    addNeighbours(){\r\n        let i = this.i;\r\n        let j = this.j;\r\n        let rows = this.rows;\r\n        let cols = this.cols;\r\n        if(i > 0)\r\n            this.neighbours.push([i-1, j]);\r\n        if(i < cols-1)\r\n            this.neighbours.push([i+1, j]);\r\n        if(j > 0)\r\n            this.neighbours.push([i, j-1]);\r\n        if(j < rows-1)\r\n            this.neighbours.push([i, j+1]);\r\n        if(i > 0 && j > 0)\r\n            this.neighbours.push([i-1, j-1]);\r\n        if(i > 0 && j < rows - 1)\r\n            this.neighbours.push([i-1, j+1]);\r\n        if(i < cols- 1 && j > 0)\r\n            this.neighbours.push([i+1, j-1]);\r\n        if(i < cols-1 && j < rows-1)\r\n            this.neighbours.push([i+1, j+1]);\r\n    }\r\n}\r\n\r\nexport default Cell;","import React from \"react\";\r\n\r\nclass BackButton extends React.Component {\r\n  onBackButtonClick = () => {\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.onBackButtonClick} className=\"btn btn-primary mx-2\">Back</button>;\r\n  }\r\n}\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\n\r\nclass ClearButton extends React.Component {\r\n  onClearButtonClick = () => {\r\n    this.props.onClearButtonClick();\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.onClearButtonClick} className=\"btn btn-primary mx-2\">Clear</button>;\r\n  }\r\n}\r\n\r\nexport default ClearButton;\r\n","import React from \"react\";\r\nimport BackButton from \"../../utility_components/BackButton\";\r\nimport ClearButton from \"../../utility_components/ClearButton\";\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  onBackButtonClick = () => {\r\n    this.props.onBackButtonClick();\r\n  }\r\n\r\n  onClearButtonClick = () => {\r\n    this.props.onClearButtonClick();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.stage === 0) {\r\n      return (\r\n        <div>\r\n          <h2>{this.props.algo}</h2>\r\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n          Click where you want to start from\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.stage === 1) {\r\n      return (\r\n        <div>\r\n          <h2>{this.props.algo}</h2>\r\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n          Click where you want to end\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.stage === 2) {\r\n        return (\r\n          <div>\r\n            <h2>{this.props.algo}</h2>\r\n            <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n            <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n          </div>\r\n        );\r\n      }\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","export function showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end){\r\n    for (let i = 0; i < cols; i++) {\r\n        for (let j = 0; j < rows; j++) {\r\n          let x = i * length;\r\n          let y = j * breadth;\r\n          p5.fill(255);\r\n          p5.stroke(0);\r\n          if (grid[i][j].wall) {\r\n            p5.fill(0);\r\n          }\r\n          if (grid[i][j] === start) {\r\n            p5.fill(233, 222, 21);\r\n          }\r\n          if (grid[i][j] === end) {\r\n            p5.fill(228, 31, 4);\r\n          }\r\n          p5.rect(x, y, length, breadth);\r\n        }\r\n      }\r\n}\r\n\r\nexport function showingOpenSet(p5, openSet, length, breadth, start, end){\r\n    for (let i = 0; i < openSet.length; i++) {\r\n        let x = openSet[i].i;\r\n        let y = openSet[i].j;\r\n        x = x * length;\r\n        y = y * breadth;\r\n        p5.fill(139, 237, 151);\r\n        p5.stroke(0);\r\n        if (openSet[i] === start) {\r\n          p5.fill(233, 222, 21);\r\n        }\r\n        if (openSet[i] === end) {\r\n          p5.fill(228, 31, 4);\r\n        }\r\n        p5.rect(x, y, length, breadth);\r\n      }\r\n}\r\n\r\nexport function showingclosedSet(p5, closedSet, length, breadth, start, end){\r\n    for (let i = 0; i < closedSet.length; i++) {\r\n        let x = closedSet[i].i;\r\n        let y = closedSet[i].j;\r\n        x = x * length;\r\n        y = y * breadth;\r\n        p5.fill(4, 228, 226);\r\n        p5.stroke(0);\r\n        if (closedSet[i] === start) {\r\n          p5.fill(233, 222, 21);\r\n        } else if (closedSet[i] === end) {\r\n          p5.fill(228, 31, 4);\r\n        }\r\n        p5.rect(x, y, length, breadth);\r\n      }\r\n}\r\n\r\nexport function showingPath(p5, path, length, breadth, start, end){\r\n    for (let i = 0; i < path.length; i++) {\r\n      let x = path[i].i;\r\n      let y = path[i].j;\r\n      x = x * length;\r\n      y = y * breadth;\r\n      p5.fill(0, 0, 255);\r\n      p5.stroke(0);\r\n      if (path[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      } else if (path[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, length, breadth);\r\n    }\r\n  }","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Cell from \"../astar/Cell\";\r\nimport NavBar from \"../astar/components/NavBar\";\r\nimport {\r\n  showingCompleteGrid,\r\n  showingOpenSet,\r\n  showingclosedSet,\r\n  showingPath,\r\n} from \"../astar/Draw\";\r\n\r\nlet cols = 25,\r\n  rows = 11;\r\nlet length, breadth;\r\nlet grid = new Array(cols);\r\nlet openSet = [];\r\nlet closedSet = [];\r\nlet start = null,\r\n  end = null,\r\n  current = null;\r\nlet noSolution = false,\r\n  solution = false;\r\nlet path = [];\r\nlet reLoad = false;\r\nlet xyz;\r\nlet flag = false;\r\n\r\nclass Dijkstra extends React.Component {\r\n  state = { start: null, end: null, stage: 0 };\r\n\r\n  componentDidUpdate = () => {\r\n    if (reLoad) {\r\n      this.cleaning();\r\n      this.initializeGrid();\r\n    }\r\n    this.initializeStartAndEnd();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initializeGrid();\r\n    this.initializeStartAndEnd();\r\n  };\r\n\r\n  setup = (p5, parent) => {\r\n    xyz = p5\r\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\r\n      .parent(parent);\r\n    this.initializeCanvas(p5);\r\n    // p5.frameRate(5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\r\n    this.initializeCanvas(p5);\r\n    if(solution || noSolution){\r\n      flag = true;\r\n    }\r\n  };\r\n\r\n  initializeCanvas = (p5) => {\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) * 0.9;\r\n    xyz.position(x, y);\r\n    length = p5.width / cols;\r\n    breadth = p5.height / rows;\r\n  };\r\n\r\n  initializeGrid = () => {\r\n    for (let i = 0; i < cols; i++) {\r\n      grid[i] = new Array(rows);\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        grid[i][j] = new Cell(i, j, rows, cols);\r\n        grid[i][j].addNeighbours();\r\n      }\r\n    }\r\n  };\r\n\r\n  initializeStartAndEnd = () => {\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if(flag === true){\r\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\r\n      showingOpenSet(p5, openSet, length, breadth, start, end);\r\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\r\n      showingPath(p5, path, length, breadth, start, end);\r\n    }\r\n    if (!noSolution && !solution) {\r\n      p5.background(0);\r\n      if (start && end) {\r\n        if (openSet.length > 0) {\r\n          current = openSet[this.lowest_f_value_index()];\r\n          if (current === end) {\r\n            solution = true;\r\n          }\r\n          this.removeFromArray(openSet, current);\r\n          closedSet.push(current);\r\n\r\n          let neighbours = current.neighbours;\r\n          for (let i = 0; i < neighbours.length; i++) {\r\n            let [x, y] = neighbours[i];\r\n            let neighbour = grid[x][y];\r\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\r\n              let tempG = current.g + 1;\r\n              if (openSet.includes(neighbour)) {\r\n                if (tempG < neighbour.g) {\r\n                  this.updateNeighbourScore(neighbour, tempG);\r\n                }\r\n              } else {\r\n                openSet.push(neighbour);\r\n                this.updateNeighbourScore(neighbour, tempG);\r\n              }\r\n            }\r\n          }\r\n        } else if (!solution) {\r\n          noSolution = true;\r\n        }\r\n      }\r\n\r\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\r\n\r\n      showingOpenSet(p5, openSet, length, breadth, start, end);\r\n\r\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\r\n\r\n      if (!noSolution && current) {\r\n        path = [];\r\n        path.push(current);\r\n        while (current.prev) {\r\n          path.push(current.prev);\r\n          current = current.prev;\r\n        }\r\n      }\r\n\r\n      showingPath(p5, path, length, breadth, start, end);\r\n    }\r\n\r\n    if (noSolution) {\r\n      console.log(\"No Solution\");\r\n    }\r\n  };\r\n\r\n  updateNeighbourScore = (neighbour, tempG) => {\r\n    neighbour.g = tempG;\r\n    neighbour.prev = current;\r\n    neighbour.f = neighbour.g + neighbour.h;\r\n  };\r\n\r\n  lowest_f_value_index = () => {\r\n    let lowestIndex = 0;\r\n    for (let i = 0; i < openSet.length; i++) {\r\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\r\n    }\r\n    return lowestIndex;\r\n  };\r\n\r\n  removeFromArray(array, element) {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      if (array[i] === element) array.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / length);\r\n    let j = Math.floor(y / breadth);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\r\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\r\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\r\n    }\r\n  };\r\n\r\n  cleaning = () => {\r\n    openSet = [];\r\n    closedSet = [];\r\n    noSolution = false;\r\n    path = [];\r\n    current = null;\r\n    reLoad = false;\r\n    noSolution = false;\r\n    solution = false;\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    reLoad = true;\r\n    this.setState({ start: null, end: null, stage: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mb-3\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"Dijkstra\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <div className=\"container\">\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized={this.windowResized}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dijkstra;","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nlet length, breadth;\r\nlet rows = 11, cols = 25;\r\nlet grid = [];\r\nlet current = null,\r\n  next = null,\r\n  start = null;\r\nlet stack = [];\r\nlet reLoad = false;\r\nlet solution = false;\r\nlet flag = true;\r\nlet xyz;\r\n\r\nclass BackTracking extends React.Component {\r\n  state = { start: null, stage: 0 };\r\n\r\n  componentDidMount() {\r\n    grid = [];\r\n    this.initializeGrid();\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (reLoad) {\r\n      this.cleaning();\r\n      this.initializeGrid();\r\n    }\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    console.log(1);\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8).parent(canvasParentRef);\r\n    p5.frameRate();\r\n    this.initializeCanvas(p5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\r\n    this.initializeCanvas(p5);\r\n    if(solution){\r\n      flag = true;\r\n    }\r\n  };\r\n\r\n  initializeCanvas = (p5) => {\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) * 0.9;\r\n    xyz.position(x, y);\r\n    length = p5.width / cols;\r\n    breadth = p5.height / rows;\r\n  };\r\n\r\n  initializeGrid = () => {\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        let cell = new Cell(i, j, rows, cols);\r\n        grid.push(cell);\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if(flag === true){\r\n      this.showGrid(p5);\r\n    }\r\n    if (!solution) {\r\n      p5.background(0);\r\n      this.showGrid(p5);\r\n      if (current) {\r\n        current.visited = true;\r\n        p5.noStroke();\r\n        p5.fill(21, 42, 233);\r\n        p5.rect(current.i * length, current.j * breadth, length, breadth);\r\n        next = this.checkNeighbours();\r\n        if (next) {\r\n          stack.push(current);\r\n          this.removeWalls();\r\n          current = next;\r\n        } else if (stack.length > 0) {\r\n          current = stack.pop();\r\n        } else {\r\n          solution = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  showGrid = (p5) => {\r\n    for (let i = 0; i < grid.length; i++) {\r\n      let x = grid[i].i;\r\n      let y = grid[i].j;\r\n      x = x * length;\r\n      y = y * breadth;\r\n      p5.noFill();\r\n      p5.stroke(255);\r\n      p5.strokeWeight(2);\r\n      if (grid[i].walls[0]) {\r\n        p5.line(x, y, x + length, y);\r\n      }\r\n      if (grid[i].walls[1]) {\r\n        p5.line(x + length, y, x + length, y + breadth);\r\n      }\r\n      if (grid[i].walls[2]) {\r\n        p5.line(x + length, y + breadth, x, y + breadth);\r\n      }\r\n      if (grid[i].walls[3]) {\r\n        p5.line(x, y + breadth, x, y);\r\n      }\r\n      if (start === grid[i]) {\r\n        p5.noStroke();\r\n        p5.fill(255, 0, 0);\r\n        p5.rect(x, y, length, breadth);\r\n      } else if (grid[i].visited) {\r\n        p5.noStroke();\r\n        p5.fill(46, 240, 113);\r\n        p5.rect(x, y, length+1, breadth+1);\r\n      }\r\n    }\r\n  }\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / length);\r\n    let j = Math.floor(y / breadth);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows) {\r\n      if (!this.state.start)\r\n        this.setState({ start: grid[j * cols + i], stage: 1 });\r\n    }\r\n  };\r\n\r\n  checkNeighbours = () => {\r\n    const i = current.i;\r\n    const j = current.j;\r\n    let neighbours = [];\r\n    let top = grid[this.index(i, j - 1)];\r\n    let right = grid[this.index(i + 1, j)];\r\n    let bottom = grid[this.index(i, j + 1)];\r\n    let left = grid[this.index(i - 1, j)];\r\n    if (top && !top.visited) neighbours.push(top);\r\n    if (right && !right.visited) neighbours.push(right);\r\n    if (bottom && !bottom.visited) neighbours.push(bottom);\r\n    if (left && !left.visited) neighbours.push(left);\r\n    if (neighbours.length > 0) {\r\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\r\n    } else return undefined;\r\n  };\r\n\r\n  removeWalls = () => {\r\n    let x = current.i - next.i;\r\n    let y = current.j - next.j;\r\n    if (x < 0) {\r\n      current.walls[1] = false;\r\n      next.walls[3] = false;\r\n    } else if (x > 0) {\r\n      current.walls[3] = false;\r\n      next.walls[1] = false;\r\n    } else if (y > 0) {\r\n      current.walls[0] = false;\r\n      next.walls[2] = false;\r\n    } else if (y < 0) {\r\n      current.walls[2] = false;\r\n      next.walls[0] = false;\r\n    }\r\n  };\r\n\r\n  index = (i, j) => {\r\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\r\n    return j * cols + i;\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  cleaning = () => {\r\n    grid = [];\r\n    current = null;\r\n    next = null;\r\n    start = null;\r\n    stack = [];\r\n    reLoad = false;\r\n    solution = false;\r\n  }\r\n\r\n  onClearButtonClick = () => {\r\n    reLoad = true;\r\n    this.setState({ start: null, stage: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mb-3\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"BackTracking\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <div className=\"container\">\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized={this.windowResized}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BackTracking;","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Cell from \"./Cell\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {\r\n  showingCompleteGrid,\r\n  showingOpenSet,\r\n  showingclosedSet,\r\n  showingPath,\r\n} from \"./Draw\";\r\n\r\nlet cols = 25,\r\n  rows = 11;\r\nlet length, breadth;\r\nlet grid = new Array(cols);\r\nlet openSet = [];\r\nlet closedSet = [];\r\nlet start = null,\r\n  end = null,\r\n  current = null;\r\nlet noSolution = false,\r\n  solution = false;\r\nlet path = [];\r\nlet reLoad = false;\r\nlet xyz;\r\nlet flag = false;\r\n\r\nclass AStar extends React.Component {\r\n  state = { start: null, end: null, stage: 0 };\r\n\r\n  componentDidUpdate = () => {\r\n    if (reLoad) {\r\n      this.cleaning();\r\n      this.initializeGrid();\r\n    }\r\n    this.initializeStartAndEnd();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initializeGrid();\r\n    this.initializeStartAndEnd();\r\n  };\r\n\r\n  setup = (p5, parent) => {\r\n    xyz = p5\r\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\r\n      .parent(parent);\r\n    this.initializeCanvas(p5);\r\n    // p5.frameRate(5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\r\n    this.initializeCanvas(p5);\r\n    if(solution || noSolution){\r\n      flag = true;\r\n    }\r\n  };\r\n\r\n  initializeCanvas = (p5) => {\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) * 0.9;\r\n    xyz.position(x, y);\r\n    length = p5.width / cols;\r\n    breadth = p5.height / rows;\r\n  };\r\n\r\n  initializeGrid = () => {\r\n    for (let i = 0; i < cols; i++) {\r\n      grid[i] = new Array(rows);\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        grid[i][j] = new Cell(i, j, rows, cols);\r\n        grid[i][j].addNeighbours();\r\n      }\r\n    }\r\n  };\r\n\r\n  initializeStartAndEnd = () => {\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if(flag === true){\r\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\r\n      showingOpenSet(p5, openSet, length, breadth, start, end);\r\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\r\n      showingPath(p5, path, length, breadth, start, end);\r\n    }\r\n    if (!noSolution && !solution) {\r\n      p5.background(0);\r\n      if (start && end) {\r\n        if (openSet.length > 0) {\r\n          current = openSet[this.lowest_f_value_index()];\r\n          if (current === end) {\r\n            solution = true;\r\n          }\r\n          this.removeFromArray(openSet, current);\r\n          closedSet.push(current);\r\n\r\n          let neighbours = current.neighbours;\r\n          for (let i = 0; i < neighbours.length; i++) {\r\n            let [x, y] = neighbours[i];\r\n            let neighbour = grid[x][y];\r\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\r\n              let tempG = current.g + 1;\r\n              if (openSet.includes(neighbour)) {\r\n                if (tempG < neighbour.g) {\r\n                  this.updateNeighbourScore(neighbour, tempG);\r\n                }\r\n              } else {\r\n                openSet.push(neighbour);\r\n                this.updateNeighbourScore(neighbour, tempG);\r\n              }\r\n            }\r\n          }\r\n        } else if (!solution) {\r\n          noSolution = true;\r\n        }\r\n      }\r\n\r\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\r\n\r\n      showingOpenSet(p5, openSet, length, breadth, start, end);\r\n\r\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\r\n\r\n      if (!noSolution && current) {\r\n        path = [];\r\n        path.push(current);\r\n        while (current.prev) {\r\n          path.push(current.prev);\r\n          current = current.prev;\r\n        }\r\n      }\r\n\r\n      showingPath(p5, path, length, breadth, start, end);\r\n    }\r\n\r\n    if (noSolution) {\r\n      console.log(\"No Solution\");\r\n    }\r\n  };\r\n\r\n  updateNeighbourScore = (neighbour, tempG) => {\r\n    neighbour.g = tempG;\r\n    neighbour.prev = current;\r\n    neighbour.h = this.heuristic(neighbour.i, neighbour.j);\r\n    neighbour.f = neighbour.g + neighbour.h;\r\n  };\r\n\r\n  lowest_f_value_index = () => {\r\n    let lowestIndex = 0;\r\n    for (let i = 0; i < openSet.length; i++) {\r\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\r\n    }\r\n    return lowestIndex;\r\n  };\r\n\r\n  removeFromArray(array, element) {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      if (array[i] === element) array.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / length);\r\n    let j = Math.floor(y / breadth);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\r\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\r\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\r\n    }\r\n  };\r\n\r\n  cleaning = () => {\r\n    openSet = [];\r\n    closedSet = [];\r\n    noSolution = false;\r\n    path = [];\r\n    current = null;\r\n    reLoad = false;\r\n    noSolution = false;\r\n    solution = false;\r\n  };\r\n\r\n  heuristic(i, j) {\r\n    let x = this.state.end.i - i;\r\n    let y = this.state.end.j - j;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    reLoad = true;\r\n    this.setState({ start: null, end: null, stage: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mb-3\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"A*\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <div className=\"container\">\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized={this.windowResized}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AStar;","class Cell{\r\n    constructor(i, j, rows, cols){\r\n        this.i=i;\r\n        this.j=j;\r\n        this.visited = false;\r\n        this.walls = [true, true, true, true];\r\n    }\r\n}\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport BackButton from \"../../utility_components/BackButton\";\r\nimport ClearButton from \"../../utility_components/ClearButton\";\r\n\r\nclass NavBar extends React.Component {\r\n    onBackButtonClick = () => {\r\n        this.props.onBackButtonClick();\r\n      }\r\n    \r\n      onClearButtonClick = () => {\r\n        this.props.onClearButtonClick();\r\n      }\r\n    \r\n  render() {\r\n    if (this.props.stage === 0) {\r\n      return (\r\n        <div>\r\n          <h2>BackTracking</h2>\r\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\r\n          Click from where you want to start\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>BackTracking</h2>\r\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport '../css/graph.css'\r\n\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\nconst Graph = (props) => {\r\n\r\n    const graph = props.array.map((num, id) => {\r\n        return <div key={id} className=\"array-bar\"  style={{\r\n            backgroundColor: PRIMARY_COLOR,\r\n            height: `${num}px`,\r\n          }}></div>\r\n    });\r\n\r\n    return (\r\n        <div className=\"array-container\"> \r\n            {graph}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graph;","export function getMergeSortAnimations(array){\r\n  const animations = [];\r\n  const auxArray = array.slice();\r\n  mergesort(array, 0, array.length-1, auxArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergesort(array, start, end, auxArray, animations){\r\n  if(start === end)\r\n    return;\r\n  const mid = Math.floor((start + end)/2);\r\n  mergesort(auxArray, start, mid, array, animations);\r\n  mergesort(auxArray, mid+1, end, array, animations);\r\n  merge(array, start, end, auxArray, animations);\r\n}\r\n\r\nfunction merge(array, start, end, auxArray, animations){\r\n  const mid = Math.floor((start+end)/2);\r\n  let i = start, j = mid+1, k = start;\r\n  while(i <= mid && j <= end){\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if(auxArray[i] <= auxArray[j]){\r\n      animations.push([k, auxArray[i]]);\r\n      array[k++] = auxArray[i++];\r\n    }\r\n    else{  \r\n      animations.push([k, auxArray[j]]);\r\n      array[k++] = auxArray[j++];\r\n    }\r\n  }\r\n  while(i <= mid){\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxArray[i]]);\r\n    array[k++] = auxArray[i++];\r\n  }\r\n  while(j <= end){\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxArray[j]]);\r\n    array[k++] = auxArray[j++];\r\n  }\r\n}","export function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    bubblesort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubblesort(array, animations){\r\n    const n = array.length - 1;\r\n    for(let i = 0 ;  i < n ; i++){\r\n        for(let j = 0 ; j < n - i ; j++){\r\n            animations.push([j, j+1, 0]);\r\n            animations.push([j, j+1, 2]);\r\n            if(array[j] > array[j+1]){\r\n                animations.push([j, array[j+1], 1]);\r\n                animations.push([j+1, array[j], 1]);\r\n                let temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n            }\r\n        }\r\n    }\r\n}","export function getSelectionSortAnimations(array){\r\n    const animations = [];\r\n    selectionsort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction selectionsort(array, animations){\r\n    const n = array.length;\r\n    for(let i = 0 ; i < n-1 ; i++){\r\n        let maxi = array[0], k = 0;\r\n        for(let j = 0 ;  j < n-i ; j++){\r\n            animations.push([j, -1]);\r\n            animations.push([j, -2]);\r\n            if(maxi < array[j]){\r\n                maxi = array[j];\r\n                k = j;\r\n            }\r\n        }\r\n        animations.push([k, array[n-i-1]]);\r\n        animations.push([n-i-1, array[k]]);\r\n        let temp = array[k];\r\n        array[k] = array[n-i-1];\r\n        array[n-i-1] = temp;\r\n    }\r\n}","export function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    insertionsort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction insertionsort(array, animations){\r\n    const n = array.length - 1;\r\n    for(let i = 1 ; i <= n ; i++){\r\n        animations.push([i, -1]);\r\n        animations.push([i, -2]);\r\n        let temp = array[i], j = i-1;\r\n        for( ; j >= 0 ; j--){\r\n            animations.push([j, -1]);\r\n            animations.push([j, -2]);\r\n            if(array[j] > temp){\r\n                animations.push([j+1, array[j]]);\r\n                array[j+1] = array[j];\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        animations.push([j+1, temp]);\r\n        array[j+1] = temp;\r\n    }\r\n}","export function getQuickSortAnimations(array){\r\n    const animations = [];\r\n    quicksort(array, 0, array.length - 1, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quicksort(array, start, end, animations){\r\n    if(start < end){\r\n        const pIndex = randomisedPartition(array, start, end, animations);\r\n        quicksort(array, start, pIndex-1, animations);\r\n        quicksort(array, pIndex+1, end, animations);\r\n    }\r\n}\r\n\r\nfunction randomisedPartition(array, start, end, animations){\r\n    const k = Math.floor(Math.random() * (end-start+1)) + start;\r\n    animations.push([k, array[end]]);\r\n    animations.push([end, array[k]]);\r\n    let temp = array[k];\r\n    array[k] = array[end];\r\n    array[end] = temp;\r\n    return partition(array, start, end, animations);\r\n}\r\n\r\nfunction partition(array, start, end, animations){\r\n    let pivot = array[end];\r\n    let pIndex = start;\r\n    for(let i = start ; i < end ; i++){\r\n        if(array[i] < pivot){\r\n            animations.push([i, array[pIndex]]);\r\n            animations.push([pIndex, array[i]]);\r\n            let temp = array[i];\r\n            array[i] = array[pIndex];\r\n            array[pIndex] = temp;\r\n            pIndex++;\r\n        }\r\n    }\r\n    animations.push([end, array[pIndex]]);\r\n    animations.push([pIndex, array[end]]);\r\n    array[end] = array[pIndex];\r\n    array[pIndex] = pivot;\r\n    return pIndex;\r\n}","const ANIMATION_SPEED_MS = 10;\r\nconst PRIMARY_COLOR = \"turquoise\";\r\nconst SECONDARY_COLOR = \"red\";\r\n\r\nexport function animateMergeSort(animations) {\r\n  const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [barOneIdx, barTwoIdx] = animations[i];\r\n      const barOneStyle = arrayBars[barOneIdx].style;\r\n      const barTwoStyle = arrayBars[barTwoIdx].style;\r\n      const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = color;\r\n        barTwoStyle.backgroundColor = color;\r\n      }, i * ANIMATION_SPEED_MS);\r\n    } else {\r\n      setTimeout(() => {\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        barOneStyle.height = `${newHeight}px`;\r\n      }, i * ANIMATION_SPEED_MS);\r\n    }\r\n  }\r\n}\r\n","const ANIMATION_SPEED_MS = 2;\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function animateBubbleSort(animations){\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n      for(let i = 0 ; i < animations.length ; i++){\r\n        const [barOneIdx, barTwoIdx, decider] = animations[i];\r\n        if(decider === 0){\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            setTimeout(() => {\r\n              barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n              barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n            }, i * ANIMATION_SPEED_MS);\r\n        }\r\n        else if(decider === 2){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n            barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n        else{\r\n            const newHeight = barTwoIdx;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            setTimeout(() => {\r\n              barOneStyle.backgroundColor= 'blue';\r\n              barOneStyle.height = `${newHeight}px`;\r\n              barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n            }, i*ANIMATION_SPEED_MS);\r\n        }\r\n      }\r\n}","const ANIMATION_SPEED_MS = 1;\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function animateSelectionSort(animations){\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n      for(let i = 0 ;  i < animations.length ; i++){\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        if(newHeight === -1){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n        else if(newHeight === -2){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        } \r\n        else{\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.height = `${newHeight}px`;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n      }\r\n}","const ANIMATION_SPEED_MS = 10;\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function animateQuickSort(animations){\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n      for(let i = 0 ;  i < animations.length ; i++){\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        if(newHeight === -1){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n        else if(newHeight === -2){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        } \r\n        else{\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.height = `${newHeight}px`;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n      }\r\n}","const ANIMATION_SPEED_MS = 10;\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function animateInsertionSort(animations){\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n      for(let i = 0 ;  i < animations.length ; i++){\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        if(newHeight === -1){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n        else if(newHeight === -2){\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        } \r\n        else{\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          setTimeout(() => {\r\n            barOneStyle.height = `${newHeight}px`;\r\n          }, i*ANIMATION_SPEED_MS);\r\n        }\r\n      }\r\n}","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nlet array = [];\r\nlet visited = [];\r\nlet n = 30;\r\nlet length, breadth;\r\nlet key = null;\r\nlet index = 0;\r\nlet found = false;\r\nlet reLoad = false;\r\nlet xyz;\r\nlet flag = false;\r\n\r\nclass LinearSearch extends React.Component {\r\n  state = { key: null, stage: 0 };\r\n \r\n  componentDidMount() {\r\n    this.resetArray();\r\n    key = this.state.key;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (reLoad) {\r\n        this.resetArray();\r\n        reLoad = false;\r\n    }\r\n    key = this.state.key;\r\n  }\r\n\r\n  resetArray() {\r\n    for (let i = 0; i < n; i++) {\r\n      array.push(Math.floor(Math.random() * 100 + 1));\r\n    }\r\n    for (let i = 0; i < n; i++) {\r\n      visited.push(false);\r\n    }\r\n  }\r\n\r\n  setup = (p5, parent) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\r\n    p5.frameRate(5);\r\n    this.initializeCanvas(p5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\r\n    this.initializeCanvas(p5);\r\n    if(found){\r\n      flag = true;\r\n    }\r\n  }\r\n\r\n  initializeCanvas = (p5) => {\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    length = p5.width / n;\r\n    breadth = p5.height * 0.9;\r\n    console.log(length);\r\n    console.log(breadth);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if(flag){\r\n      this.showArray(p5);\r\n\r\n    }\r\n    if (!found && (index < n+1)) {\r\n      p5.background(255);\r\n      this.showArray(p5);\r\n      if (key) {\r\n        if (index !== -1) {\r\n          if (array[index] == key) {\r\n            p5.fill(255, 0, 0);\r\n            visited[index] = true;\r\n            found = true;\r\n          } else {\r\n            visited[index] = true;\r\n            p5.fill(0, 255, 0);\r\n          }\r\n        }\r\n        p5.rect(index * length, 0, length, breadth);\r\n        p5.fill(0);\r\n        p5.textSize((length + breadth) / 6);\r\n        p5.text(array[index], index * length + (6 * length) / 24, (15 * breadth) / 24);\r\n        index = index + 1;\r\n      }\r\n    }\r\n    else if(index == 21 && !found){\r\n      console.log(\"Not found\");\r\n      found = true;\r\n    }\r\n  };\r\n\r\n  showArray = (p5) => {\r\n    for (let i = 0; i < n; i++) {\r\n      if (!visited[i]) {\r\n        p5.fill(4, 228, 221);\r\n      }\r\n      else if(flag && array[i] == key){\r\n        console.log(1);\r\n        p5.fill(255, 0, 0);\r\n      }\r\n      else {\r\n        p5.fill(0, 0, 255);\r\n      }\r\n      p5.stroke(0);\r\n      p5.rect(i * length, 0, length, breadth);\r\n      p5.fill(0);\r\n      p5.textSize((length + breadth) / 6);\r\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\r\n    }\r\n\r\n  }\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    this.cleaning();\r\n    reLoad = true;\r\n    this.setState({key : null, stage : 0});\r\n  };\r\n\r\n  cleaning = () => {\r\n    array = [];\r\n    visited = [];\r\n    index = 0;\r\n    found = false;\r\n  }\r\n\r\n  onSearchButtonClick = () => {\r\n    let n = document.getElementById(\"key\").value;\r\n    if(this.state.key === null){\r\n      this.setState({key : n, stage : 1});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mb-3\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"Linear Search\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onSearchButtonClick = {this.onSearchButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized={this.windowResized}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LinearSearch;","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"../linearsearch/NavBar\";\r\n\r\nlet array = [];\r\nlet n = 30;\r\nlet length, breadth;\r\nlet key = null;\r\nlet found = false;\r\nlet reLoad = false;\r\nlet lo, hi, mid;\r\nlet xyz;\r\nlet flag = false;\r\n\r\nclass BinarySearch extends React.Component {\r\n  state = { key: null, stage: 0 };\r\n\r\n  componentDidMount() {\r\n    lo = 0;\r\n    hi = n - 1;\r\n    this.resetArray();\r\n    key = this.state.key;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (reLoad) {\r\n      reLoad = false;\r\n      this.resetArray();\r\n    }\r\n    key = this.state.key;\r\n  }\r\n\r\n  resetArray() {\r\n    for (let i = 0; i < n; i++) {\r\n      array.push(Math.floor(Math.random() * 100 + 1));\r\n      array.sort((a, b) => a - b);\r\n    }\r\n    key = array[Math.floor(Math.random() * 19)];\r\n  }\r\n\r\n  setup = (p5, parent) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\r\n    p5.frameRate(5);\r\n    this.initializeCanvas(p5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\r\n    this.initializeCanvas(p5);\r\n    if(found){\r\n      flag = true;\r\n    }\r\n  };\r\n\r\n  initializeCanvas = (p5) => {\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    length = p5.width / n;\r\n    breadth = p5.height * 0.9;\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if(flag == true){\r\n      this.showArray(p5);\r\n    }\r\n    if (!found && lo <= hi) {\r\n      p5.background(255);\r\n      this.showArray(p5);\r\n      if (key) {\r\n        mid = Math.floor((lo + hi) / 2);\r\n        if (array[mid] == key) {\r\n          found = true;\r\n          p5.fill(255, 0, 0);\r\n          p5.rect(mid * length, 0, length, breadth);\r\n          p5.fill(0);\r\n          p5.textSize((length + breadth) / 6);\r\n          p5.text(array[mid], mid * length + (9 * length) / 24, (7 * breadth) / 12);\r\n        } else if (array[mid] > key) {\r\n          hi = mid - 1;\r\n        } else if (array[mid] < key) {\r\n          lo = mid + 1;\r\n        }\r\n      }\r\n    }\r\n    else if(!found){\r\n      console.log(\"Not Found\");\r\n      this.showArray(p5);\r\n    }\r\n  };\r\n\r\n  showArray = (p5) => {\r\n    for (let i = 0; i < n; i++) {\r\n      if(array[i] == key){\r\n        p5.fill(255, 0, 0);\r\n      }\r\n      else if(i >= lo && i <= hi) {\r\n        p5.fill(0, 255, 0);\r\n      } else{\r\n        p5.fill(255);\r\n      }\r\n      p5.stroke(0);\r\n      p5.rect(i * length, 0, length, breadth);\r\n      p5.fill(0);\r\n      p5.textSize((length + breadth) / 6);\r\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\r\n    }\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    this.cleaning();\r\n    reLoad = true;\r\n    this.setState({ key: null, stage: 0 });\r\n  };\r\n\r\n  cleaning = () => {\r\n    array = [];\r\n    lo = 0;\r\n    hi = n - 1;\r\n    found = false;\r\n  }\r\n\r\n  onSearchButtonClick = () => {\r\n    let n = document.getElementById(\"key\").value;\r\n    console.log(n);\r\n    if(this.state.key === null){\r\n      this.setState({key : n, stage : 1});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"Binary Search\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onSearchButtonClick = {this.onSearchButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized={this.windowResized}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { getMergeSortAnimations } from \"./sortingAlgos/mergesort\";\r\nimport { getBubbleSortAnimations } from \"./sortingAlgos/bubblesort\";\r\nimport { getSelectionSortAnimations } from \"./sortingAlgos/selectionsort\";\r\nimport { getInsertionSortAnimations } from \"./sortingAlgos/insertionsort\";\r\nimport { getQuickSortAnimations } from \"./sortingAlgos/quicksort\";\r\nimport { animateMergeSort } from \"./animations/mergesort_animations\";\r\nimport { animateBubbleSort } from \"./animations/bubblesort_animations\";\r\nimport { animateSelectionSort } from \"./animations/selectionsort_animations\";\r\nimport { animateQuickSort } from \"./animations/quicksort_animations\";\r\nimport { animateInsertionSort } from \"./animations/insertionsort_animations\";\r\nimport BackButton from '../../utility_components/BackButton';\r\nimport \"../css/button.css\";\r\n\r\nclass Menu extends React.Component{\r\n\r\n    generateNewArray = () => {\r\n        this.props.onGenerateNewArray();\r\n      };\r\n    \r\n      mergesort = async () => {\r\n        document.getElementById(\"bs\").disabled = true;\r\n        const animations = getMergeSortAnimations(this.props.array);\r\n        await animateMergeSort(animations);\r\n        document.getElementById(\"bs\").disabled = false;\r\n      };\r\n\r\n      bubblesort = () => {\r\n        const animations = getBubbleSortAnimations(this.props.array);\r\n        animateBubbleSort(animations);\r\n      };\r\n    \r\n      selectionsort = () => {\r\n        const animations = getSelectionSortAnimations(this.props.array);\r\n        animateSelectionSort(animations);\r\n      };\r\n    \r\n      insertionsort = () => {\r\n        const animations = getInsertionSortAnimations(this.props.array);\r\n        animateInsertionSort(animations);\r\n      };\r\n    \r\n      quicksort = () => {\r\n        const animations = getQuickSortAnimations(this.props.array);\r\n        animateQuickSort(animations);\r\n      };\r\n\r\n      onBackButtonClick = () => {\r\n        this.props.onBackButtonClick();\r\n      }\r\n      \r\n    render(){\r\n        return (\r\n          <div className=\"container mt-3\">\r\n              <button onClick={this.generateNewArray} className=\"btn btn-primary\">Generate Array</button>\r\n              <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n            <button class=\"b btn btn-outline-secondary\" onClick={this.mergesort}>MergeSort</button>\r\n            <button class=\"c btn btn-outline-success\" id=\"bs\" onClick={this.bubblesort}>BubbleSort</button>\r\n            <button class=\"d btn btn-outline-warning\" onClick={this.selectionsort}>SelectionSort</button>\r\n            <button class=\"e btn btn-outline-danger\" onClick={this.insertionsort}>InsertionSort</button>\r\n            <button class=\"f btn btn-outline-info\" onClick={this.quicksort}>QuickSort</button>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport Graph from \"./Graph\";\r\nimport Menu from \"./Menu\";\r\n\r\nclass SortingVisualizer extends React.Component {\r\n  generateNewArray = () => {\r\n    this.props.onGenerateNewArray();\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.props.onBackButtonClick();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Menu\r\n          array={this.props.array}\r\n          onGenerateNewArray={this.generateNewArray}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n        />\r\n        <Graph array={this.props.array} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\r\nimport SortingVisualizer from \"./components/SortingVisualizer\";\r\nimport \"./css/app.css\";\r\n\r\nclass Sorting extends React.Component {\r\n  \r\n  state = { array: [] };\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray = () => {\r\n    const array = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      array.push(Math.floor(Math.random() * 300) + 20);\r\n    }\r\n    this.setState({ array });\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <SortingVisualizer\r\n          array={this.state.array}\r\n          onGenerateNewArray={this.resetArray}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sorting;\r\n","import React from \"react\";\r\n\r\nclass SearchButton extends React.Component {\r\n  onSearchButtonClick = () => {\r\n    this.props.onSearchButtonClick();\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.onSearchButtonClick} className=\"btn btn-primary m-2\">Search</button>;\r\n  }\r\n}\r\n\r\nexport default SearchButton;\r\n","import React from \"react\";\r\nimport BackButton from \"../utility_components/BackButton\";\r\nimport ClearButton from \"../utility_components/ClearButton\";\r\nimport SearchButton from \"../utility_components/SearchButton\";\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  onBackButtonClick = () => {\r\n    this.props.onBackButtonClick();\r\n  }\r\n\r\n  onClearButtonClick = () => {\r\n    this.props.onClearButtonClick();\r\n  }\r\n\r\n  onSearchButtonClick = () => {\r\n    this.props.onSearchButtonClick();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.stage === 0) {\r\n      return (\r\n        <div className=\"mt-3\">\r\n          <h2>{this.props.algo}</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n          <input id=\"key\" className=\"form-control\" placeholder=\"Enter the element you want to search\"></input>\r\n          <SearchButton onSearchButtonClick={this.onSearchButtonClick} />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.stage === 1) {\r\n      return (\r\n        <div className=\"mt-3\">\r\n          <h2>{this.props.algo}</h2>\r\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","class Point{\r\n    constructor(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n        // this.r = Math.floor(Math.random(1)*255);\r\n        // this.g = Math.floor(Math.random(1)*255);\r\n        // this.b = Math.floor(Math.random(1)*255);\r\n        this.r = 255;\r\n        this.g = 255;\r\n        this.b = 255;\r\n    }\r\n}\r\n\r\nexport default Point;","import React from \"react\";\r\n\r\nclass StartButton extends React.Component {\r\n  onStartButtonClick = () => {\r\n    this.props.onStartButtonClick();\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.onStartButtonClick} className=\"btn btn-primary m-2\">Start</button>;\r\n  }\r\n}\r\n\r\nexport default StartButton;\r\n","import React from \"react\";\r\nimport BackButton from \"../utility_components/BackButton\";\r\nimport ClearButton from \"../utility_components/ClearButton\";\r\nimport StartButton from \"../utility_components/StartButton\";\r\n\r\nclass NavBar extends React.Component{\r\n    onBackButtonClick = () => {\r\n        this.props.onBackButtonClick();\r\n    }\r\n    onClearButtonClick = () => {\r\n        this.props.onClearButtonClick();\r\n    }\r\n    onStartButtonClick = () => {\r\n        this.props.onStartButtonClick();\r\n    }\r\n    render(){\r\n        if(this.props.stage === 0){\r\n            return (\r\n                <div>\r\n                    <h2>TSP</h2>\r\n                   <span className=\"fs-5\">Choose the points</span> \r\n                    <StartButton onStartButtonClick={this.onStartButtonClick}/>\r\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else if(this.props.stage === 1){\r\n            return (\r\n                <div>\r\n                    <h2>TSP</h2>\r\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\r\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavBar;","export function initializePopulation(population, order, populationSize) {\r\n  for (let i = 0; i < populationSize; i++) {\r\n    population[i] = shuffle(order);\r\n  }\r\n}\r\n\r\nfunction shuffle(order) {\r\n  let array = order.slice();\r\n  array.sort(() => Math.random() - 0.5);\r\n  return array;\r\n}\r\n\r\nexport function calcFitness(points, population, fitness) {\r\n  for (let i = 0; i < population.length; i++) {\r\n    let d = calcDist(points, population[i]);\r\n    fitness[i] = 1 / (d + 0.1);\r\n  }\r\n  normalizeFitness(fitness);\r\n}\r\n\r\nfunction normalizeFitness(fitness) {\r\n  let totalFitness = 0;\r\n  for (let i = 0; i < fitness.length; i++) {\r\n    totalFitness += fitness[i];\r\n  }\r\n  for (let i = 0; i < fitness.length; i++) {\r\n    fitness[i] = fitness[i] / totalFitness;\r\n  }\r\n}\r\n\r\nfunction calcDist(points, order) {\r\n  let sum = 0;\r\n  for (let i = 1; i < order.length; i++) {\r\n    let x1 = points[order[i]].x;\r\n    let y1 = points[order[i]].y;\r\n    let x2 = points[order[i - 1]].x;\r\n    let y2 = points[order[i - 1]].y;\r\n    let x = x1 - x2;\r\n    let y = y1 - y2;\r\n    let d = Math.sqrt(x * x + y * y);\r\n    sum += d;\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function getCurrentBest(fitness) {\r\n  let index = -1;\r\n  let best = -1;\r\n  for (let i = 0; i < fitness.length; i++) {\r\n    if (fitness[i] > best) {\r\n      best = fitness[i];\r\n      index = i;\r\n    }\r\n  }\r\n  return index;\r\n}\r\n\r\nexport function nextGeneration(population, fitness) {\r\n  let newPopulation = [];\r\n  for (let i = 0; i < population.length; i++) {\r\n    let order1 = getOne(population, fitness);\r\n    let order2 = getOne(population, fitness);\r\n    let newOrder = crossOver(order1, order2);\r\n    newOrder = mutate(newOrder, 0.01);\r\n    newPopulation.push(newOrder);\r\n  }\r\n  return newPopulation;\r\n}\r\n\r\nfunction getOne(list, prob) {\r\n  var index = 0;\r\n  var r = Math.random(1);\r\n\r\n  while (r > 0) {\r\n    r = r - prob[index];\r\n    index++;\r\n  }\r\n  index--;\r\n  return list[index].slice();\r\n}\r\n\r\nfunction crossOver(order1, order2) {\r\n  var start = Math.floor(Math.random(1) * order1.length);\r\n  var end = Math.floor(\r\n    Math.random(1) * (order1.length - (start + 1) + 1) + start + 1\r\n  );\r\n  var temp = order1.slice(start, end);\r\n  let newOrder = [];\r\n  for (let i = 0; i < order1.length; i++) {\r\n    newOrder[i] = Infinity;\r\n  }\r\n  for (let i = start; i < end; i++) {\r\n    newOrder[i] = order1[i];\r\n  }\r\n  let j = 0;\r\n  for (let i = 0; i < order2.length; i++) {\r\n    var idx = order2[i];\r\n    if (j === start) j = end;\r\n    if (!temp.includes(idx)) {\r\n      newOrder[j++] = idx;\r\n    }\r\n  }\r\n  return newOrder;\r\n}\r\n\r\nfunction mutate(order, mutationRate) {\r\n  if (Math.random(1) < mutationRate) {\r\n    var indexA = Math.floor(Math.random(1) * order.length);\r\n    var indexB = (indexA + 1) % order.length;\r\n    order = swap(order, indexA, indexB);\r\n  }\r\n  return order;\r\n}\r\n\r\nfunction swap(order, i, j) {\r\n  let temp = order[i];\r\n  order[i] = order[j];\r\n  order[j] = temp;\r\n  return order;\r\n}\r\n","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Point from \"./Point\";\r\nimport NavBar from \"./NavBar\";\r\nimport {initializePopulation} from \"./GeneticAlgo\";\r\nimport {calcFitness} from \"./GeneticAlgo\";\r\nimport {getCurrentBest} from \"./GeneticAlgo\";\r\nimport {nextGeneration} from \"./GeneticAlgo\";\r\n\r\nlet points = [];\r\nlet width;\r\nlet height;\r\nlet bestFitness = -1;\r\nlet bestPath = [];\r\nlet order = [];\r\nlet complete = false;\r\nlet flag = false;\r\nlet population = [];\r\nlet fitness = [];\r\nlet populationSize = 1000;\r\nlet xyz;\r\n\r\n\r\n\r\nclass TSP extends React.Component {\r\n  state = { stage: 0 };\r\n\r\n  componentDidUpdate = () => {\r\n    initializePopulation(population, order, populationSize);\r\n  };\r\n\r\n  setup = (p5, parent) => {\r\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78).parent(parent);\r\n    this.initializeCanvas(p5);\r\n  };\r\n\r\n  windowResized = (p5) => {\r\n    let prevWidth = p5.width;\r\n    let prevHeight = p5.height;\r\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78);\r\n    this.initializeCanvas(p5);\r\n    for(let i = 0 ; i < points.length ; i++){\r\n      points[i].x = (p5.width * points[i].x) / prevWidth;\r\n      points[i].y = (p5.height * points[i].y) / prevHeight;\r\n    }\r\n  }\r\n\r\n  initializeCanvas = (p5) => {\r\n    width = p5.windowWidth*0.95;\r\n    height = p5.windowHeight * 0.78;\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) * 0.9;\r\n    xyz.position(x, y);\r\n  }\r\n\r\n  draw = (p5) => {\r\n    if (!complete) {\r\n      p5.background(0);\r\n      if (this.state.stage === 0) {\r\n        p5.noStroke();\r\n        p5.fill(255);\r\n        p5.noCursor();\r\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\r\n      }\r\n      this.showPoints(p5);\r\n      if (this.state.stage === 1) {\r\n        calcFitness(points, population, fitness);\r\n        let currentBestIndex= getCurrentBest(fitness);\r\n        let currentBestFitness = fitness[currentBestIndex];\r\n        let currentBestPath = population[currentBestIndex];\r\n        this.showLines(currentBestPath, p5, 255, 255, 255, 0.5);\r\n        if (currentBestFitness > bestFitness) {\r\n          bestFitness = currentBestFitness;\r\n          bestPath = currentBestPath;\r\n        }\r\n        this.showLines(bestPath, p5, 255, 0, 255, 6);\r\n        population = nextGeneration(population, fitness);\r\n      }\r\n    } else if (!flag) {\r\n        this.showFinalPath(p5);\r\n    }\r\n  };\r\n\r\n  showFinalPath = (p5) => {\r\n    p5.background(0);\r\n    this.showPoints(p5);\r\n    this.showLines(bestPath, p5, 255, 0, 255, 6);\r\n    flag = true;\r\n  };\r\n\r\n  calcPathDistance = (p5) => {\r\n    let dist = 0;\r\n    for (let i = 1; i < order.length; i++) {\r\n      dist += p5.dist(\r\n        points[order[i]].x,\r\n        points[order[i]].y,\r\n        points[order[i - 1]].x,\r\n        points[order[i - 1]].y\r\n      );\r\n    }\r\n    return dist;\r\n  };\r\n\r\n  swap(array, i, j) {\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  showLines = (order, p5, r, g, b, strokeWeight) => {\r\n    p5.beginShape();\r\n    p5.stroke(r, g, b);\r\n    p5.strokeWeight(strokeWeight);\r\n    p5.noFill();\r\n    for (let i = 0; i < order.length; i++) {\r\n      p5.vertex(points[order[i]].x, points[order[i]].y);\r\n    }\r\n    p5.endShape();\r\n  };\r\n\r\n  showPoints = (p5) => {\r\n    for (let i = 0; i < points.length; i++) {\r\n      p5.fill(points[i].r, points[i].g, points[i].b);\r\n      p5.ellipse(points[i].x, points[i].y, 25, 25);\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    if (this.state.stage === 0) {\r\n      let x = e.mouseX;\r\n      let y = e.mouseY;\r\n      if (x > 0 && x < width && y > 0 && y < height) {\r\n        points.push(new Point(x, y));\r\n        console.log(x, y);\r\n      }\r\n    }\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.cleaning();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    this.cleaning();\r\n    this.setState({ stage: 0 });\r\n  };\r\n\r\n  cleaning = () => {\r\n    bestFitness = -1;\r\n    bestPath = [];\r\n    points = [];\r\n    order = [];\r\n    complete = false;\r\n  };\r\n\r\n  onStartButtonClick = () => {\r\n    order = [];\r\n    for (let i = 0; i < points.length; i++) {\r\n      order.push(i);\r\n    }\r\n    this.setState({ stage: 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onStartButtonClick={this.onStartButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n          windowResized = {this.windowResized}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TSP;","import React from \"react\";\r\nimport Dijkstra from \"./dijkstra/Dijkstra\";\r\nimport BackTracking from \"./backtracking/BackTracking\";\r\nimport AStar from \"./astar/AStar\";\r\nimport Sorting from \"./sorting/Sorting\";\r\nimport LinearSearch from \"./linearsearch/LinearSearch\";\r\nimport BinarySearch from \"./binarysearch/BinarySearch\";\r\nimport TSP from \"./tsp/TSP\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {\r\n  state = { option: 0 };\r\n\r\n  onBackButtonClick = () => {\r\n    this.setState({ option: 0 });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.option === 0) {\r\n      return (\r\n        <div className=\"container mt-3\">\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 1 });\r\n            }}\r\n          >\r\n            Dijkstra\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 2 });\r\n            }}\r\n          >\r\n            BackTracking\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 3 });\r\n            }}\r\n          >\r\n            A*\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 4 });\r\n            }}\r\n          >\r\n            Sorting\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 5 });\r\n            }}\r\n          >\r\n            LinearSearch\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 6 });\r\n            }}\r\n          >\r\n            BinarySearch\r\n          </button>\r\n          <button className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              this.setState({ option: 7 });\r\n            }}\r\n          >\r\n            TSP\r\n          </button>\r\n        </div>\r\n      );\r\n    } else if (this.state.option === 1) {\r\n      return <Dijkstra onBackButtonClick={this.onBackButtonClick} />;\r\n    } else if (this.state.option === 2) {\r\n      return <BackTracking onBackButtonClick={this.onBackButtonClick} />;\r\n    } else if (this.state.option === 3) {\r\n      return <AStar onBackButtonClick={this.onBackButtonClick} />;\r\n    } else if (this.state.option === 4) {\r\n      return <Sorting onBackButtonClick={this.onBackButtonClick} />;\r\n    }else if (this.state.option === 5) {\r\n      return <LinearSearch onBackButtonClick={this.onBackButtonClick} />;\r\n    }else if (this.state.option === 6) {\r\n      return <BinarySearch onBackButtonClick={this.onBackButtonClick} />;\r\n    }else if (this.state.option === 7) {\r\n      return <TSP onBackButtonClick={this.onBackButtonClick} />;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}