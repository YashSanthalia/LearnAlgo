{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\BackTracking\\\\BackTracking.js\";\nimport React from \"react\";\nimport Cell from \"./Cell\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst side = 40;\nlet rows, cols;\nlet grid = [];\nlet current = null,\n    next = null;\nlet stack = [];\n\nclass BackTracking extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null\n    };\n\n    this.setup = (p5, canvasParentRef) => {\n      console.log(this.state.start);\n      let xyz = p5.createCanvas(400, 400).parent(canvasParentRef);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n      p5.frameRate();\n      rows = p5.width / side;\n      cols = p5.width / side;\n\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < cols; i++) {\n          let cell = new Cell(i, j);\n          grid.push(cell);\n        }\n      }\n\n      current = grid[this.state.start];\n    };\n\n    this.draw = p5 => {\n      p5.background(2);\n\n      for (let i = 0; i < grid.length; i++) {\n        let x = grid[i].i;\n        let y = grid[i].j;\n        x = x * side;\n        y = y * side;\n        p5.stroke(255);\n        p5.noFill();\n\n        if (grid[i].walls[0]) {\n          p5.line(x, y, x + side, y);\n        }\n\n        if (grid[i].walls[1]) {\n          p5.line(x + side, y, x + side, y + side);\n        }\n\n        if (grid[i].walls[2]) {\n          p5.line(x + side, y + side, x, y + side);\n        }\n\n        if (grid[i].walls[3]) {\n          p5.line(x, y + side, x, y);\n        }\n\n        if (grid[i].visited) {\n          p5.noStroke();\n          p5.fill(46, 204, 113);\n          p5.rect(x, y, side, side);\n        }\n      }\n\n      if (current) {\n        current.visited = true;\n        p5.noStroke();\n        p5.fill(255, 150, 255);\n        p5.rect(current.i * side, current.j * side, side, side);\n        next = this.checkNeighbours();\n        console.log(next);\n\n        if (next) {\n          stack.push(current);\n          this.removeWalls();\n          current = next;\n        } else if (stack.length > 0) {\n          current = stack.pop();\n        } else {\n          p5.noLoop();\n        }\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n      let n = this.index(i, j);\n      this.setState({\n        start: n\n      });\n    };\n\n    this.checkNeighbours = () => {\n      const i = current.i;\n      const j = current.j;\n      let neighbours = [];\n      let top = grid[this.index(i, j - 1)];\n      let right = grid[this.index(i + 1, j)];\n      let bottom = grid[this.index(i, j + 1)];\n      let left = grid[this.index(i - 1, j)];\n      if (top && !top.visited) neighbours.push(top);\n      if (right && !right.visited) neighbours.push(right);\n      if (bottom && !bottom.visited) neighbours.push(bottom);\n      if (left && !left.visited) neighbours.push(left);\n\n      if (neighbours.length > 0) {\n        return neighbours[Math.floor(Math.random() * neighbours.length)];\n      } else return undefined;\n    };\n\n    this.removeWalls = () => {\n      let x = current.i - next.i;\n      let y = current.j - next.j;\n\n      if (x < 0) {\n        current.walls[1] = false;\n        next.walls[3] = false;\n      } else if (x > 0) {\n        current.walls[3] = false;\n        next.walls[1] = false;\n      } else if (y > 0) {\n        current.walls[0] = false;\n        next.walls[2] = false;\n      } else if (y < 0) {\n        current.walls[2] = false;\n        next.walls[0] = false;\n      }\n    };\n\n    this.index = (i, j) => {\n      if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n      return j * cols + i;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BackTracking;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/BackTracking/BackTracking.js"],"names":["React","Cell","Sketch","NavBar","side","rows","cols","grid","current","next","stack","BackTracking","Component","state","start","setup","p5","canvasParentRef","console","log","xyz","createCanvas","parent","x","windowWidth","width","y","windowHeight","height","position","frameRate","j","i","cell","push","draw","background","length","stroke","noFill","walls","line","visited","noStroke","fill","rect","checkNeighbours","removeWalls","pop","noLoop","mousePressed","e","mouseX","mouseY","Math","floor","n","index","setState","neighbours","top","right","bottom","left","random","undefined","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nconst side = 40;\r\nlet rows, cols;\r\nlet grid = [];\r\nlet current = null, next = null;\r\nlet stack = [];\r\n\r\nclass BackTracking extends React.Component {\r\n\r\n  state = {start : null};\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    console.log(this.state.start);\r\n    let xyz = p5.createCanvas(400, 400).parent(canvasParentRef);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    p5.frameRate();\r\n    rows = p5.width / side;\r\n    cols = p5.width / side;\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        let cell = new Cell(i, j);\r\n        grid.push(cell);\r\n      }\r\n    }\r\n    current = grid[this.state.start];\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(2);\r\n    for (let i = 0; i < grid.length; i++) {\r\n      let x = grid[i].i;\r\n      let y = grid[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.stroke(255);\r\n      p5.noFill();\r\n      if (grid[i].walls[0]) {\r\n        p5.line(x, y, x + side, y);\r\n      }\r\n      if (grid[i].walls[1]) {\r\n        p5.line(x + side, y, x + side, y + side);\r\n      }\r\n      if (grid[i].walls[2]) {\r\n        p5.line(x + side, y + side, x, y + side);\r\n      }\r\n      if (grid[i].walls[3]) {\r\n        p5.line(x, y + side, x, y);\r\n      }\r\n      if (grid[i].visited) {\r\n        p5.noStroke();\r\n        p5.fill(46, 204, 113);\r\n        p5.rect(x, y, side, side);\r\n      }\r\n    }\r\n    if (current) {\r\n      current.visited = true;\r\n      p5.noStroke();\r\n      p5.fill(255, 150, 255);\r\n      p5.rect(current.i * side, current.j * side, side, side);\r\n      next = this.checkNeighbours();\r\n      console.log(next);\r\n      if (next) {\r\n        stack.push(current);\r\n        this.removeWalls();\r\n        current = next;\r\n      } else if (stack.length > 0) {\r\n        current = stack.pop();\r\n      } else {\r\n        p5.noLoop();\r\n      }\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x/side);\r\n    let j = Math.floor(y/side);\r\n    let n = this.index(i, j);\r\n    this.setState({start : n});\r\n  };\r\n\r\n  checkNeighbours = () => {\r\n    const i = current.i;\r\n    const j = current.j;\r\n    let neighbours = [];\r\n    let top = grid[this.index(i, j - 1)];\r\n    let right = grid[this.index(i + 1, j)];\r\n    let bottom = grid[this.index(i, j + 1)];\r\n    let left = grid[this.index(i - 1, j)];\r\n    if (top && !top.visited) neighbours.push(top);\r\n    if (right && !right.visited) neighbours.push(right);\r\n    if (bottom && !bottom.visited) neighbours.push(bottom);\r\n    if (left && !left.visited) neighbours.push(left);\r\n    if (neighbours.length > 0) {\r\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\r\n    } else return undefined;\r\n  };\r\n\r\n  removeWalls = () => {\r\n    let x = current.i - next.i;\r\n    let y = current.j - next.j;\r\n    if (x < 0) {\r\n      current.walls[1] = false;\r\n      next.walls[3] = false;\r\n    } else if (x > 0) {\r\n      current.walls[3] = false;\r\n      next.walls[1] = false;\r\n    } else if (y > 0) {\r\n      current.walls[0] = false;\r\n      next.walls[2] = false;\r\n    } else if (y < 0) {\r\n      current.walls[2] = false;\r\n      next.walls[0] = false;\r\n    }\r\n  };\r\n\r\n  index = (i, j) => {\r\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\r\n    return j * cols + i;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <Sketch setup={this.setup} draw={this.draw} mousePressed={this.mousePressed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BackTracking;\r\n"]},"metadata":{},"sourceType":"module"}