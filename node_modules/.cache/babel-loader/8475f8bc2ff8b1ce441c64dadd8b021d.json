{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\BackTracking\\\\BackTracking.js\";\nimport React from \"react\";\nimport Cell from \"./Cell\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst side = 25;\nlet rows, cols;\nlet grid = [];\nlet current = null,\n    next = null,\n    start = null;\nlet stack = [];\nlet reLoad = false;\n\nclass BackTracking extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null,\n      stage: 0\n    };\n\n    this.setup = (p5, canvasParentRef) => {\n      let xyz = p5.createCanvas(1200, 500).parent(canvasParentRef);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n      p5.frameRate(100);\n      rows = p5.height / side;\n      cols = p5.width / side; // for (let j = 0; j < rows; j++) {\n      //   for (let i = 0; i < cols; i++) {\n      //     let cell = new Cell(i, j, rows, cols);\n      //     grid.push(cell);\n      //   }\n      // }\n    };\n\n    this.draw = p5 => {\n      p5.background(2);\n\n      for (let i = 0; i < grid.length; i++) {\n        let x = grid[i].i;\n        let y = grid[i].j;\n        x = x * side;\n        y = y * side;\n        p5.stroke(255);\n        p5.noFill();\n\n        if (grid[i].walls[0]) {\n          p5.line(x, y, x + side, y);\n        }\n\n        if (grid[i].walls[1]) {\n          p5.line(x + side, y, x + side, y + side);\n        }\n\n        if (grid[i].walls[2]) {\n          p5.line(x + side, y + side, x, y + side);\n        }\n\n        if (grid[i].walls[3]) {\n          p5.line(x, y + side, x, y);\n        }\n\n        if (start == grid[i]) {\n          p5.noStroke();\n          p5.fill(255, 0, 0);\n          p5.rect(x, y, side, side);\n        } else if (grid[i].visited) {\n          p5.noStroke();\n          p5.fill(46, 240, 113);\n          p5.rect(x, y, side, side);\n        }\n      }\n\n      if (current) {\n        current.visited = true;\n        p5.noStroke();\n        p5.fill(21, 42, 233);\n        p5.rect(current.i * side, current.j * side, side, side);\n        next = this.checkNeighbours();\n\n        if (next) {\n          stack.push(current);\n          this.removeWalls();\n          current = next;\n        } else if (stack.length > 0) {\n          current = stack.pop();\n        } else {\n          p5.noLoop();\n        }\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n\n      if (i >= 0 && j >= 0 && i < cols && j < rows) {\n        if (!this.state.start) this.setState({\n          start: grid[j * cols + i],\n          stage: 1\n        });\n      }\n    };\n\n    this.checkNeighbours = () => {\n      const i = current.i;\n      const j = current.j;\n      let neighbours = [];\n      let top = grid[this.index(i, j - 1)];\n      let right = grid[this.index(i + 1, j)];\n      let bottom = grid[this.index(i, j + 1)];\n      let left = grid[this.index(i - 1, j)];\n      if (top && !top.visited) neighbours.push(top);\n      if (right && !right.visited) neighbours.push(right);\n      if (bottom && !bottom.visited) neighbours.push(bottom);\n      if (left && !left.visited) neighbours.push(left);\n\n      if (neighbours.length > 0) {\n        return neighbours[Math.floor(Math.random() * neighbours.length)];\n      } else return undefined;\n    };\n\n    this.removeWalls = () => {\n      let x = current.i - next.i;\n      let y = current.j - next.j;\n\n      if (x < 0) {\n        current.walls[1] = false;\n        next.walls[3] = false;\n      } else if (x > 0) {\n        current.walls[3] = false;\n        next.walls[1] = false;\n      } else if (y > 0) {\n        current.walls[0] = false;\n        next.walls[2] = false;\n      } else if (y < 0) {\n        current.walls[2] = false;\n        next.walls[0] = false;\n      }\n    };\n\n    this.index = (i, j) => {\n      if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n      return j * cols + i;\n    };\n\n    this.onBackButtonClick = () => {\n      this.onClearButtonClick();\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < cols; i++) {\n          grid[this.index(i, j)].visited = false;\n        }\n      }\n\n      stack = [];\n      current = null;\n      next = null;\n      start = null; // this.setState({ start: null, end: null, stage: 0 });\n    };\n  }\n\n  componentDidMount() {\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        let cell = new Cell(i, j, rows, cols);\n        grid.push(cell);\n      }\n    }\n\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < cols; i++) {\n          let cell = new Cell(i, j, rows, cols);\n          grid.push(cell);\n        }\n      }\n    }\n\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BackTracking;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/BackTracking/BackTracking.js"],"names":["React","Cell","Sketch","NavBar","side","rows","cols","grid","current","next","start","stack","reLoad","BackTracking","Component","state","stage","setup","p5","canvasParentRef","xyz","createCanvas","parent","x","windowWidth","width","y","windowHeight","height","position","frameRate","draw","background","i","length","j","stroke","noFill","walls","line","noStroke","fill","rect","visited","checkNeighbours","push","removeWalls","pop","noLoop","mousePressed","e","mouseX","mouseY","Math","floor","setState","neighbours","top","index","right","bottom","left","random","undefined","onBackButtonClick","onClearButtonClick","props","componentDidMount","cell","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nconst side = 25;\r\nlet rows, cols;\r\nlet grid = [];\r\nlet current = null,\r\n  next = null,\r\n  start = null;\r\nlet stack = [];\r\nlet reLoad=false;\r\n\r\nclass BackTracking extends React.Component {\r\n  state = { start: null, stage: 0 };\r\n\r\n  componentDidMount() {\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        let cell = new Cell(i, j, rows, cols);\r\n        grid.push(cell);\r\n      }\r\n    }\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(reLoad){\r\n      for (let j = 0; j < rows; j++) {\r\n        for (let i = 0; i < cols; i++) {\r\n          let cell = new Cell(i, j, rows, cols);\r\n          grid.push(cell);\r\n        }\r\n      }\r\n    }\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    let xyz = p5.createCanvas(1200, 500).parent(canvasParentRef);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    p5.frameRate(100);\r\n    rows = p5.height / side;\r\n    cols = p5.width / side;\r\n    // for (let j = 0; j < rows; j++) {\r\n    //   for (let i = 0; i < cols; i++) {\r\n    //     let cell = new Cell(i, j, rows, cols);\r\n    //     grid.push(cell);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(2);\r\n    for (let i = 0; i < grid.length; i++) {\r\n      let x = grid[i].i;\r\n      let y = grid[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.stroke(255);\r\n      p5.noFill();\r\n      if (grid[i].walls[0]) {\r\n        p5.line(x, y, x + side, y);\r\n      }\r\n      if (grid[i].walls[1]) {\r\n        p5.line(x + side, y, x + side, y + side);\r\n      }\r\n      if (grid[i].walls[2]) {\r\n        p5.line(x + side, y + side, x, y + side);\r\n      }\r\n      if (grid[i].walls[3]) {\r\n        p5.line(x, y + side, x, y);\r\n      }\r\n      if (start == grid[i]) {\r\n        p5.noStroke();\r\n        p5.fill(255, 0, 0);\r\n        p5.rect(x, y, side, side);\r\n      } else if (grid[i].visited) {\r\n        p5.noStroke();\r\n        p5.fill(46, 240, 113);\r\n        p5.rect(x, y, side, side);\r\n      }\r\n    }\r\n    if (current) {\r\n      current.visited = true;\r\n      p5.noStroke();\r\n      p5.fill(21, 42, 233);\r\n      p5.rect(current.i * side, current.j * side, side, side);\r\n      next = this.checkNeighbours();\r\n      if (next) {\r\n        stack.push(current);\r\n        this.removeWalls();\r\n        current = next;\r\n      } else if (stack.length > 0) {\r\n        current = stack.pop();\r\n      } else {\r\n        p5.noLoop();\r\n      }\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / side);\r\n    let j = Math.floor(y / side);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows) {\r\n      if (!this.state.start)\r\n        this.setState({ start: grid[j * cols + i], stage: 1 });\r\n    }\r\n  };\r\n\r\n  checkNeighbours = () => {\r\n    const i = current.i;\r\n    const j = current.j;\r\n    let neighbours = [];\r\n    let top = grid[this.index(i, j - 1)];\r\n    let right = grid[this.index(i + 1, j)];\r\n    let bottom = grid[this.index(i, j + 1)];\r\n    let left = grid[this.index(i - 1, j)];\r\n    if (top && !top.visited) neighbours.push(top);\r\n    if (right && !right.visited) neighbours.push(right);\r\n    if (bottom && !bottom.visited) neighbours.push(bottom);\r\n    if (left && !left.visited) neighbours.push(left);\r\n    if (neighbours.length > 0) {\r\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\r\n    } else return undefined;\r\n  };\r\n\r\n  removeWalls = () => {\r\n    let x = current.i - next.i;\r\n    let y = current.j - next.j;\r\n    if (x < 0) {\r\n      current.walls[1] = false;\r\n      next.walls[3] = false;\r\n    } else if (x > 0) {\r\n      current.walls[3] = false;\r\n      next.walls[1] = false;\r\n    } else if (y > 0) {\r\n      current.walls[0] = false;\r\n      next.walls[2] = false;\r\n    } else if (y < 0) {\r\n      current.walls[2] = false;\r\n      next.walls[0] = false;\r\n    }\r\n  };\r\n\r\n  index = (i, j) => {\r\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\r\n    return j * cols + i;\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    this.onClearButtonClick();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        grid[this.index(i, j)].visited = false;\r\n      }\r\n    }\r\n    stack = [];\r\n    current = null;\r\n    next = null;\r\n    start = null;\r\n    // this.setState({ start: null, end: null, stage: 0 });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BackTracking;\r\n"]},"metadata":{},"sourceType":"module"}