{"ast":null,"code":"var hiddenKeys = require('../internals/hidden-keys');\n\nvar isObject = require('../internals/is-object');\n\nvar has = require('../internals/has');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar uid = require('../internals/uid');\n\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0; // eslint-disable-next-line es/no-object-isextensible -- safe\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, {\n    value: {\n      objectID: 'O' + ++id,\n      // object ID\n      weakData: {} // weak collections IDs\n\n    }\n  });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F'; // not necessary to add metadata\n\n    if (!create) return 'E'; // add missing metadata\n\n    setMetadata(it); // return object ID\n  }\n\n  return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true; // not necessary to add metadata\n\n    if (!create) return false; // add missing metadata\n\n    setMetadata(it); // return the store of weak collections IDs\n  }\n\n  return it[METADATA].weakData;\n}; // add metadata on freeze-family methods calling\n\n\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\nhiddenKeys[METADATA] = true;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/node_modules/core-js-pure/internals/internal-metadata.js"],"names":["hiddenKeys","require","isObject","has","defineProperty","f","uid","FREEZING","METADATA","id","isExtensible","Object","setMetadata","it","value","objectID","weakData","fastKey","create","getWeakData","onFreeze","meta","REQUIRED","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,qCAAD,CAAP,CAA+CI,CAApE;;AACA,IAAIC,GAAG,GAAGL,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIO,QAAQ,GAAGF,GAAG,CAAC,MAAD,CAAlB;AACA,IAAIG,EAAE,GAAG,CAAT,C,CAEA;;AACA,IAAIC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuB,YAAY;AACpD,SAAO,IAAP;AACD,CAFD;;AAIA,IAAIE,WAAW,GAAG,UAAUC,EAAV,EAAc;AAC9BT,EAAAA,cAAc,CAACS,EAAD,EAAKL,QAAL,EAAe;AAAEM,IAAAA,KAAK,EAAE;AACpCC,MAAAA,QAAQ,EAAE,MAAM,EAAEN,EADkB;AACd;AACtBO,MAAAA,QAAQ,EAAE,EAF0B,CAEd;;AAFc;AAAT,GAAf,CAAd;AAID,CALD;;AAOA,IAAIC,OAAO,GAAG,UAAUJ,EAAV,EAAcK,MAAd,EAAsB;AAClC;AACA,MAAI,CAAChB,QAAQ,CAACW,EAAD,CAAb,EAAmB,OAAO,OAAOA,EAAP,IAAa,QAAb,GAAwBA,EAAxB,GAA6B,CAAC,OAAOA,EAAP,IAAa,QAAb,GAAwB,GAAxB,GAA8B,GAA/B,IAAsCA,EAA1E;;AACnB,MAAI,CAACV,GAAG,CAACU,EAAD,EAAKL,QAAL,CAAR,EAAwB;AACtB;AACA,QAAI,CAACE,YAAY,CAACG,EAAD,CAAjB,EAAuB,OAAO,GAAP,CAFD,CAGtB;;AACA,QAAI,CAACK,MAAL,EAAa,OAAO,GAAP,CAJS,CAKtB;;AACAN,IAAAA,WAAW,CAACC,EAAD,CAAX,CANsB,CAOxB;AACC;;AAAC,SAAOA,EAAE,CAACL,QAAD,CAAF,CAAaO,QAApB;AACH,CAZD;;AAcA,IAAII,WAAW,GAAG,UAAUN,EAAV,EAAcK,MAAd,EAAsB;AACtC,MAAI,CAACf,GAAG,CAACU,EAAD,EAAKL,QAAL,CAAR,EAAwB;AACtB;AACA,QAAI,CAACE,YAAY,CAACG,EAAD,CAAjB,EAAuB,OAAO,IAAP,CAFD,CAGtB;;AACA,QAAI,CAACK,MAAL,EAAa,OAAO,KAAP,CAJS,CAKtB;;AACAN,IAAAA,WAAW,CAACC,EAAD,CAAX,CANsB,CAOxB;AACC;;AAAC,SAAOA,EAAE,CAACL,QAAD,CAAF,CAAaQ,QAApB;AACH,CAVD,C,CAYA;;;AACA,IAAII,QAAQ,GAAG,UAAUP,EAAV,EAAc;AAC3B,MAAIN,QAAQ,IAAIc,IAAI,CAACC,QAAjB,IAA6BZ,YAAY,CAACG,EAAD,CAAzC,IAAiD,CAACV,GAAG,CAACU,EAAD,EAAKL,QAAL,CAAzD,EAAyEI,WAAW,CAACC,EAAD,CAAX;AACzE,SAAOA,EAAP;AACD,CAHD;;AAKA,IAAIQ,IAAI,GAAGE,MAAM,CAACC,OAAP,GAAiB;AAC1BF,EAAAA,QAAQ,EAAE,KADgB;AAE1BL,EAAAA,OAAO,EAAEA,OAFiB;AAG1BE,EAAAA,WAAW,EAAEA,WAHa;AAI1BC,EAAAA,QAAQ,EAAEA;AAJgB,CAA5B;AAOApB,UAAU,CAACQ,QAAD,CAAV,GAAuB,IAAvB","sourcesContent":["var hiddenKeys = require('../internals/hidden-keys');\r\nvar isObject = require('../internals/is-object');\r\nvar has = require('../internals/has');\r\nvar defineProperty = require('../internals/object-define-property').f;\r\nvar uid = require('../internals/uid');\r\nvar FREEZING = require('../internals/freezing');\r\n\r\nvar METADATA = uid('meta');\r\nvar id = 0;\r\n\r\n// eslint-disable-next-line es/no-object-isextensible -- safe\r\nvar isExtensible = Object.isExtensible || function () {\r\n  return true;\r\n};\r\n\r\nvar setMetadata = function (it) {\r\n  defineProperty(it, METADATA, { value: {\r\n    objectID: 'O' + ++id, // object ID\r\n    weakData: {}          // weak collections IDs\r\n  } });\r\n};\r\n\r\nvar fastKey = function (it, create) {\r\n  // return a primitive with prefix\r\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\r\n  if (!has(it, METADATA)) {\r\n    // can't set metadata to uncaught frozen object\r\n    if (!isExtensible(it)) return 'F';\r\n    // not necessary to add metadata\r\n    if (!create) return 'E';\r\n    // add missing metadata\r\n    setMetadata(it);\r\n  // return object ID\r\n  } return it[METADATA].objectID;\r\n};\r\n\r\nvar getWeakData = function (it, create) {\r\n  if (!has(it, METADATA)) {\r\n    // can't set metadata to uncaught frozen object\r\n    if (!isExtensible(it)) return true;\r\n    // not necessary to add metadata\r\n    if (!create) return false;\r\n    // add missing metadata\r\n    setMetadata(it);\r\n  // return the store of weak collections IDs\r\n  } return it[METADATA].weakData;\r\n};\r\n\r\n// add metadata on freeze-family methods calling\r\nvar onFreeze = function (it) {\r\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\r\n  return it;\r\n};\r\n\r\nvar meta = module.exports = {\r\n  REQUIRED: false,\r\n  fastKey: fastKey,\r\n  getWeakData: getWeakData,\r\n  onFreeze: onFreeze\r\n};\r\n\r\nhiddenKeys[METADATA] = true;\r\n"]},"metadata":{},"sourceType":"script"}