{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\TSP\\\\TSP.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TSP extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(500, 400).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n\n      if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n        if (!this.state.start) this.setState({\n          start: grid[i][j],\n          stage: 1\n        });else if (!this.state.end) this.setState({\n          end: grid[i][j],\n          stage: 2\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      mousePressed: this.mousePressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TSP;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/TSP.js"],"names":["React","Sketch","TSP","Component","setup","p5","parent","xyz","createCanvas","x","windowWidth","width","y","windowHeight","height","position","draw","background","mousePressed","e","mouseX","mouseY","i","Math","floor","side","j","cols","rows","grid","wall","state","start","setState","stage","end","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAC7BC,KAD6B,GACrB,CAACC,EAAD,EAAKC,MAAL,KAAgB;AACpB,UAAIC,GAAG,GAAGF,EAAE,CAACG,YAAH,CAAgB,GAAhB,EAAqB,GAArB,EAA0BF,MAA1B,CAAiCA,MAAjC,CAAV;AACA,UAAIG,CAAC,GAAG,CAACJ,EAAE,CAACK,WAAH,GAAiBL,EAAE,CAACM,KAArB,IAA8B,CAAtC;AACA,UAAIC,CAAC,GAAG,CAACP,EAAE,CAACQ,YAAH,GAAkBR,EAAE,CAACS,MAAtB,IAAgC,CAAxC;AACAP,MAAAA,GAAG,CAACQ,QAAJ,CAAaN,CAAb,EAAgBG,CAAhB;AACH,KAN4B;;AAAA,SAQ7BI,IAR6B,GAQrBX,EAAD,IAAQ;AACXA,MAAAA,EAAE,CAACY,UAAH,CAAc,CAAd;AACH,KAV4B;;AAAA,SAY7BC,YAZ6B,GAYbC,CAAD,IAAO;AAClB,UAAIV,CAAC,GAAGU,CAAC,CAACC,MAAV;AACA,UAAIR,CAAC,GAAGO,CAAC,CAACE,MAAV;AACA,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWf,CAAC,GAAGgB,IAAf,CAAR;AACA,UAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWZ,CAAC,GAAGa,IAAf,CAAR;;AACA,UAAIH,CAAC,IAAI,CAAL,IAAUI,CAAC,IAAI,CAAf,IAAoBJ,CAAC,GAAGK,IAAxB,IAAgCD,CAAC,GAAGE,IAApC,IAA4C,CAACC,IAAI,CAACP,CAAD,CAAJ,CAAQI,CAAR,EAAWI,IAA5D,EAAkE;AAChE,YAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB,KAAKC,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAEH,IAAI,CAACP,CAAD,CAAJ,CAAQI,CAAR,CAAT;AAAqBQ,UAAAA,KAAK,EAAE;AAA5B,SAAd,EAAvB,KACK,IAAI,CAAC,KAAKH,KAAL,CAAWI,GAAhB,EAAqB,KAAKF,QAAL,CAAc;AAAEE,UAAAA,GAAG,EAAEN,IAAI,CAACP,CAAD,CAAJ,CAAQI,CAAR,CAAP;AAAmBQ,UAAAA,KAAK,EAAE;AAA1B,SAAd;AAC3B;AACJ,KArB4B;AAAA;;AAuB7BE,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKhC,KAApB;AAA2B,MAAA,IAAI,EAAE,KAAKY,IAAtC;AAA4C,MAAA,YAAY,EAAE,KAAKE;AAA/D;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA3B4B;;AA8BjC,eAAehB,GAAf","sourcesContent":["import React from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nclass TSP extends React.Component{\r\n    setup = (p5, parent) => {\r\n        let xyz = p5.createCanvas(500, 400).parent(parent);\r\n        let x = (p5.windowWidth - p5.width) / 2;\r\n        let y = (p5.windowHeight - p5.height) / 2;\r\n        xyz.position(x, y);\r\n    };\r\n\r\n    draw = (p5) => {\r\n        p5.background(0);\r\n    };\r\n\r\n    mousePressed = (e) => {\r\n        let x = e.mouseX;\r\n        let y = e.mouseY;\r\n        let i = Math.floor(x / side);\r\n        let j = Math.floor(y / side);\r\n        if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\r\n          if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\r\n          else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Sketch setup={this.setup} draw={this.draw} mousePressed={this.mousePressed}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TSP;"]},"metadata":{},"sourceType":"module"}