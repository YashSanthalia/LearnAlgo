{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\TSP\\\\TSP.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Point from \"./Point\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet points = [];\nconst width = 800;\nconst height = 500;\n\nclass TSP extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stage: 0\n    };\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(width, height).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      if (this.state.stage === 0) {\n        p5.noStroke();\n        p5.fill(255);\n        p5.noCursor();\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\n      }\n\n      this.showPoints(p5);\n\n      if (this.state.stage === 1) {\n        let i = Math.floor(Math.random(1) * points.length);\n        let j = Math.floor(Math.random(1) * points.length);\n        this.swap(i, j);\n        this.showLines(p5);\n        this.calcPathDistance();\n      }\n    };\n\n    this.calcPathDistance = () => {\n      let dist = 0;\n\n      for (let i = 1; i < points.length; i++) {\n        dist += p5.dist(points[i].x, points[i].y, points[i - 1].x, points[i - 1].y);\n      }\n    };\n\n    this.showLines = p5 => {\n      p5.beginShape();\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      p5.noFill();\n\n      for (let i = 0; i < points.length; i++) {\n        p5.vertex(points[i].x, points[i].y);\n      }\n\n      p5.endShape();\n    };\n\n    this.showPoints = p5 => {\n      for (let i = 0; i < points.length; i++) {\n        p5.fill(points[i].r, points[i].g, points[i].b);\n        p5.ellipse(points[i].x, points[i].y, 15, 15);\n      }\n    };\n\n    this.mousePressed = e => {\n      if (this.state.stage === 0) {\n        let x = e.mouseX;\n        let y = e.mouseY;\n\n        if (x > 0 && x < width && y > 0 && y < height) {\n          points.push(new Point(x, y));\n        }\n      }\n    };\n\n    this.onBackButtonClick = () => {\n      points = [];\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      points = [];\n      this.setState({\n        stage: 0\n      });\n    };\n\n    this.onStartButtonClick = () => {\n      this.setState({\n        stage: 1\n      });\n    };\n  }\n\n  swap(i, j) {\n    let temp = points[i];\n    points[i] = points[j];\n    points[j] = temp;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick,\n        onStartButtonClick: this.onStartButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TSP;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/TSP.js"],"names":["React","Sketch","Point","NavBar","points","width","height","TSP","Component","state","stage","setup","p5","parent","xyz","createCanvas","x","windowWidth","y","windowHeight","position","draw","background","noStroke","fill","noCursor","ellipse","mouseX","mouseY","showPoints","i","Math","floor","random","length","j","swap","showLines","calcPathDistance","dist","beginShape","stroke","strokeWeight","noFill","vertex","endShape","r","g","b","mousePressed","e","push","onBackButtonClick","props","onClearButtonClick","setState","onStartButtonClick","temp","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Point from \"./Point\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nlet points = [];\r\nconst width = 800;\r\nconst height = 500;\r\n\r\nclass TSP extends React.Component {\r\n  state = { stage: 0 };\r\n\r\n  setup = (p5, parent) => {\r\n    let xyz = p5.createCanvas(width, height).parent(parent);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(0);\r\n    if (this.state.stage === 0) {\r\n      p5.noStroke();\r\n      p5.fill(255);\r\n      p5.noCursor();\r\n      p5.ellipse(p5.mouseX, p5.mouseY, 12);\r\n    }\r\n    this.showPoints(p5);\r\n    if(this.state.stage === 1){\r\n        let i = Math.floor(Math.random(1) * points.length);\r\n        let j = Math.floor(Math.random(1) * points.length);\r\n        this.swap(i , j);\r\n        this.showLines(p5);\r\n        this.calcPathDistance();\r\n    }\r\n  };\r\n\r\n  calcPathDistance = () => {\r\n      let dist = 0;\r\n    for(let i = 1 ; i < points.length ; i++){\r\n        dist += p5.dist(points[i].x, points[i].y, points[i-1].x, points[i-1].y);\r\n    }\r\n  }\r\n\r\n  swap(i, j){\r\n    let temp = points[i];\r\n    points[i] = points[j];\r\n    points[j] = temp;\r\n  }\r\n\r\n  showLines = (p5) => {\r\n    p5.beginShape();\r\n    p5.stroke(255);\r\n    p5.strokeWeight(2);\r\n    p5.noFill();\r\n    for(let i = 0 ; i < points.length ; i++){\r\n        p5.vertex(points[i].x, points[i].y);\r\n    }\r\n    p5.endShape();\r\n  }\r\n\r\n  showPoints = (p5) => {\r\n    for (let i = 0; i < points.length; i++) {\r\n        p5.fill(points[i].r, points[i].g, points[i].b);\r\n        p5.ellipse(points[i].x, points[i].y, 15, 15);\r\n      }\r\n  }\r\n\r\n  mousePressed = (e) => {\r\n    if (this.state.stage === 0) {\r\n      let x = e.mouseX;\r\n      let y = e.mouseY;\r\n      if(x > 0 && x < width && y > 0 && y < height){\r\n        points.push(new Point(x, y));\r\n      }\r\n    }\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n      points = [];\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n      points = [];\r\n      this.setState({stage : 0});\r\n  };\r\n\r\n  onStartButtonClick = () => {\r\n    this.setState({ stage: 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onStartButtonClick={this.onStartButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TSP;\r\n"]},"metadata":{},"sourceType":"module"}