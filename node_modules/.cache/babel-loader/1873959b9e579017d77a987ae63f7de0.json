{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\TSP\\\\TSP.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Point from \"./Point\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet points = [];\nconst width = 800;\nconst height = 500;\nlet minDistance = 9999999;\nlet minDistancePath = [];\nlet order = [];\n\nclass TSP extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stage: 0\n    };\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(width, height).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      if (this.state.stage === 0) {\n        p5.noStroke();\n        p5.fill(255);\n        p5.noCursor();\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\n        order = [];\n\n        for (let i = 0; i < points.length; i++) {\n          order[i] = i;\n        }\n      }\n\n      this.showPoints(p5);\n\n      if (this.state.stage === 1) {\n        // let i = Math.floor(Math.random(1) * points.length);\n        // let j = Math.floor(Math.random(1) * points.length);\n        // this.swap(i , j);\n        nextOrder();\n        this.showLines(points, p5, 255, 255, 255, 2);\n        let currentDistance = this.calcPathDistance(p5);\n\n        if (currentDistance < minDistance) {\n          minDistance = currentDistance;\n          minDistancePath = points.slice();\n          console.log(minDistance);\n        }\n\n        this.showLines(minDistancePath, p5, 255, 0, 255, 4);\n      }\n    };\n\n    this.calcPathDistance = p5 => {\n      let dist = 0;\n\n      for (let i = 1; i < points.length; i++) {\n        dist += p5.dist(points[i].x, points[i].y, points[i - 1].x, points[i - 1].y);\n      }\n\n      return dist;\n    };\n\n    this.showLines = (points, p5, r, g, b, strokeWeight) => {\n      p5.beginShape();\n      p5.stroke(r, g, b);\n      p5.strokeWeight(strokeWeight);\n      p5.noFill();\n\n      for (let i = 0; i < points.length; i++) {\n        p5.vertex(points[i].x, points[i].y);\n      }\n\n      p5.endShape();\n    };\n\n    this.showPoints = p5 => {\n      for (let i = 0; i < points.length; i++) {\n        p5.fill(points[i].r, points[i].g, points[i].b);\n        p5.ellipse(points[i].x, points[i].y, 15, 15);\n      }\n    };\n\n    this.mousePressed = e => {\n      if (this.state.stage === 0) {\n        let x = e.mouseX;\n        let y = e.mouseY;\n\n        if (x > 0 && x < width && y > 0 && y < height) {\n          points.push(new Point(x, y));\n        }\n      }\n    };\n\n    this.onBackButtonClick = () => {\n      points = [];\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      points = [];\n      this.setState({\n        stage: 0\n      });\n    };\n\n    this.onStartButtonClick = () => {\n      this.setState({\n        stage: 1\n      });\n    };\n  }\n\n  swap(i, j) {\n    let temp = points[i];\n    points[i] = points[j];\n    points[j] = temp;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick,\n        onStartButtonClick: this.onStartButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TSP;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/TSP.js"],"names":["React","Sketch","Point","NavBar","points","width","height","minDistance","minDistancePath","order","TSP","Component","state","stage","setup","p5","parent","xyz","createCanvas","x","windowWidth","y","windowHeight","position","draw","background","noStroke","fill","noCursor","ellipse","mouseX","mouseY","i","length","showPoints","nextOrder","showLines","currentDistance","calcPathDistance","slice","console","log","dist","r","g","b","strokeWeight","beginShape","stroke","noFill","vertex","endShape","mousePressed","e","push","onBackButtonClick","props","onClearButtonClick","setState","onStartButtonClick","swap","j","temp","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Point from \"./Point\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nlet points = [];\r\nconst width = 800;\r\nconst height = 500;\r\nlet minDistance = 9999999;\r\nlet minDistancePath = [];\r\nlet order = [];\r\n\r\nclass TSP extends React.Component {\r\n  \r\n  state = { stage: 0 };\r\n\r\n  setup = (p5, parent) => {\r\n    let xyz = p5.createCanvas(width, height).parent(parent);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(0);\r\n    if (this.state.stage === 0) {\r\n      p5.noStroke();\r\n      p5.fill(255);\r\n      p5.noCursor();\r\n      p5.ellipse(p5.mouseX, p5.mouseY, 12);\r\n      order = [];\r\n      for(let i = 0 ; i < points.length ; i++){\r\n        order[i] = i;\r\n      }\r\n    }\r\n    this.showPoints(p5);\r\n    if(this.state.stage === 1){\r\n        // let i = Math.floor(Math.random(1) * points.length);\r\n        // let j = Math.floor(Math.random(1) * points.length);\r\n        // this.swap(i , j);\r\n        nextOrder();\r\n        this.showLines(points, p5, 255, 255, 255, 2);\r\n        let currentDistance = this.calcPathDistance(p5);\r\n        if(currentDistance < minDistance){\r\n            minDistance = currentDistance;\r\n            minDistancePath = points.slice();\r\n            console.log(minDistance);\r\n        }\r\n        this.showLines(minDistancePath, p5, 255, 0, 255, 4);\r\n    }\r\n  };\r\n\r\n  calcPathDistance = (p5) => {\r\n    let dist = 0;\r\n    for(let i = 1 ; i < points.length ; i++){\r\n        dist += p5.dist(points[i].x, points[i].y, points[i-1].x, points[i-1].y);\r\n    }\r\n    return dist;\r\n  }\r\n\r\n  swap(i, j){\r\n    let temp = points[i];\r\n    points[i] = points[j];\r\n    points[j] = temp;\r\n  }\r\n\r\n  showLines = (points, p5, r, g, b, strokeWeight) => {\r\n    p5.beginShape();\r\n    p5.stroke(r, g, b);\r\n    p5.strokeWeight(strokeWeight);\r\n    p5.noFill();\r\n    for(let i = 0 ; i < points.length ; i++){\r\n        p5.vertex(points[i].x, points[i].y);\r\n    }\r\n    p5.endShape();\r\n  }\r\n\r\n  showPoints = (p5) => {\r\n    for (let i = 0; i < points.length; i++) {\r\n        p5.fill(points[i].r, points[i].g, points[i].b);\r\n        p5.ellipse(points[i].x, points[i].y, 15, 15);\r\n      }\r\n  }\r\n\r\n  mousePressed = (e) => {\r\n    if (this.state.stage === 0) {\r\n      let x = e.mouseX;\r\n      let y = e.mouseY;\r\n      if(x > 0 && x < width && y > 0 && y < height){\r\n        points.push(new Point(x, y));\r\n      }\r\n    }\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n      points = [];\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n      points = [];\r\n      this.setState({stage : 0});\r\n  };\r\n\r\n  onStartButtonClick = () => {\r\n    this.setState({ stage: 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onStartButtonClick={this.onStartButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TSP;\r\n"]},"metadata":{},"sourceType":"module"}