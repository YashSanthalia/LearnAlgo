{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\AStar\\\\AStar.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"./Cell\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cols, rows;\nconst side = 20;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n    end = null,\n    current = null;\nlet noSolution = false;\nlet path = [];\n\nclass AStar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null,\n      end: null,\n      stage: 0\n    };\n\n    this.componentDidUpdate = () => {\n      start = this.state.start;\n      end = this.state.end;\n      if (start) openSet.push(start);\n    };\n\n    this.componentDidMount = () => {\n      start = this.state.start;\n      end = this.state.end;\n      if (start) openSet.push(start);\n    };\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(1200, 500).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y); // p5.frameRate(5);\n\n      cols = p5.width / side;\n      rows = p5.height / side;\n\n      for (let i = 0; i < cols; i++) {\n        grid[i] = new Array(rows);\n      }\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          grid[i][j] = new Cell(i, j, rows, cols);\n          grid[i][j].addNeighbours();\n        }\n      }\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      if (start && end) {\n        if (openSet.length > 0) {\n          let lowestIndex = 0;\n\n          for (let i = 0; i < openSet.length; i++) {\n            if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n          }\n\n          current = openSet[lowestIndex];\n\n          if (current === end) {\n            p5.noLoop();\n          }\n\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n          let neighbours = current.neighbours;\n\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  neighbour.g = tempG;\n                  neighbour.prev = current;\n                  neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n                  neighbour.f = neighbour.g + neighbour.h;\n                }\n              } else {\n                neighbour.g = tempG;\n                openSet.push(neighbour);\n                neighbour.prev = current;\n                neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n                neighbour.f = neighbour.g + neighbour.h;\n              }\n            }\n          }\n        } else {\n          noSolution = true;\n          p5.noLoop();\n        }\n      }\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          let x = i * side;\n          let y = j * side;\n          p5.fill(255);\n          p5.stroke(0);\n\n          if (grid[i][j].wall) {\n            p5.fill(0);\n            p5.stroke(0);\n          }\n\n          if (grid[i][j] === start) {\n            p5.fill(233, 222, 21);\n          }\n\n          if (grid[i][j] === end) {\n            p5.fill(228, 31, 4);\n          }\n\n          p5.rect(x, y, side, side);\n        }\n      }\n\n      for (let i = 0; i < openSet.length; i++) {\n        let x = openSet[i].i;\n        let y = openSet[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(139, 237, 151);\n        p5.stroke(0);\n\n        if (openSet[i] === start) {\n          p5.fill(233, 222, 21);\n        }\n\n        if (openSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n\n      for (let i = 0; i < closedSet.length; i++) {\n        let x = closedSet[i].i;\n        let y = closedSet[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(4, 228, 226);\n        p5.stroke(0);\n\n        if (closedSet[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (closedSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      for (let i = 0; i < path.length; i++) {\n        let x = path[i].i;\n        let y = path[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(0, 0, 255);\n        p5.stroke(0);\n\n        if (path[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (path[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n\n      if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n        if (!this.state.start) this.setState({\n          start: grid[i][j],\n          stage: 1\n        });else if (!this.state.end) this.setState({\n          end: grid[i][j],\n          stage: 2\n        });\n      }\n    };\n\n    this.onBackButtonClick = () => {\n      this.onClearButtonClick();\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      openSet = [];\n      closedSet = [];\n      noSolution = false;\n      path = [];\n      current = null;\n      this.props.callMeAgain();\n    };\n  }\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  heuristic(i, j) {\n    let x = this.state.end.i - i;\n    let y = this.state.end.j - j;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  render() {\n    console.log(3);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        algo: \"A*\",\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AStar;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/AStar/AStar.js"],"names":["React","Sketch","Cell","NavBar","cols","rows","side","grid","Array","openSet","closedSet","start","end","current","noSolution","path","AStar","Component","state","stage","componentDidUpdate","push","componentDidMount","setup","p5","parent","xyz","createCanvas","x","windowWidth","width","y","windowHeight","height","position","i","j","addNeighbours","draw","background","length","lowestIndex","f","noLoop","removeFromArray","neighbours","neighbour","includes","wall","tempG","g","prev","h","heuristic","fill","stroke","rect","mousePressed","e","mouseX","mouseY","Math","floor","setState","onBackButtonClick","onClearButtonClick","props","callMeAgain","array","element","splice","sqrt","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Cell from \"./Cell\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nlet cols, rows;\r\nconst side = 20;\r\nlet grid = new Array(cols);\r\nlet openSet = [];\r\nlet closedSet = [];\r\nlet start = null,\r\n  end = null,\r\n  current = null;\r\nlet noSolution = false;\r\nlet path = [];\r\n\r\nclass AStar extends React.Component {\r\n  state = { start: null, end: null, stage: 0 };\r\n\r\n  componentDidUpdate = () => {\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  setup = (p5, parent) => {\r\n    let xyz = p5.createCanvas(1200, 500).parent(parent);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    // p5.frameRate(5);\r\n    cols = p5.width / side;\r\n    rows = p5.height / side;\r\n    for (let i = 0; i < cols; i++) {\r\n      grid[i] = new Array(rows);\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        grid[i][j] = new Cell(i, j, rows, cols);\r\n        grid[i][j].addNeighbours();\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(0);\r\n    if (start && end) {\r\n      if (openSet.length > 0) {\r\n        let lowestIndex = 0;\r\n        for (let i = 0; i < openSet.length; i++) {\r\n          if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\r\n        }\r\n        current = openSet[lowestIndex];\r\n        if (current === end) {\r\n          p5.noLoop();\r\n        }\r\n        this.removeFromArray(openSet, current);\r\n        closedSet.push(current);\r\n\r\n        let neighbours = current.neighbours;\r\n        for (let i = 0; i < neighbours.length; i++) {\r\n          let [x, y] = neighbours[i];\r\n          let neighbour = grid[x][y];\r\n          if (!closedSet.includes(neighbour) && !neighbour.wall) {\r\n            let tempG = current.g + 1;\r\n            if (openSet.includes(neighbour)) {\r\n              if (tempG < neighbour.g) {\r\n                neighbour.g = tempG;\r\n                neighbour.prev = current;\r\n                neighbour.h = this.heuristic(neighbour.i, neighbour.j);\r\n                neighbour.f = neighbour.g + neighbour.h;\r\n              }\r\n            } else {\r\n              neighbour.g = tempG;\r\n              openSet.push(neighbour);\r\n              neighbour.prev = current;\r\n              neighbour.h = this.heuristic(neighbour.i, neighbour.j);\r\n              neighbour.f = neighbour.g + neighbour.h;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        noSolution = true;\r\n        p5.noLoop();\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        let x = i * side;\r\n        let y = j * side;\r\n        p5.fill(255);\r\n        p5.stroke(0);\r\n        if (grid[i][j].wall) {\r\n          p5.fill(0);\r\n          p5.stroke(0);\r\n        }\r\n        if (grid[i][j] === start) {\r\n          p5.fill(233, 222, 21);\r\n        }\r\n        if (grid[i][j] === end) {\r\n          p5.fill(228, 31, 4);\r\n        }\r\n        p5.rect(x, y, side, side);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < openSet.length; i++) {\r\n      let x = openSet[i].i;\r\n      let y = openSet[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(139, 237, 151);\r\n      p5.stroke(0);\r\n      if (openSet[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      }\r\n      if (openSet[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n\r\n    for (let i = 0; i < closedSet.length; i++) {\r\n      let x = closedSet[i].i;\r\n      let y = closedSet[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(4, 228, 226);\r\n      p5.stroke(0);\r\n      if (closedSet[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      } else if (closedSet[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n\r\n    if (!noSolution && current) {\r\n      path = [];\r\n      path.push(current);\r\n      while (current.prev) {\r\n        path.push(current.prev);\r\n        current = current.prev;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      let x = path[i].i;\r\n      let y = path[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(0, 0, 255);\r\n      p5.stroke(0);\r\n      if (path[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      } else if (path[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / side);\r\n    let j = Math.floor(y / side);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\r\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\r\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\r\n    }\r\n  };\r\n\r\n  removeFromArray(array, element) {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      if (array[i] === element) array.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  heuristic(i, j) {\r\n    let x = this.state.end.i - i;\r\n    let y = this.state.end.j - j;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  onBackButtonClick = () => {\r\n    this.onClearButtonClick();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    openSet = [];\r\n    closedSet = [];\r\n    noSolution = false;\r\n    path = [];\r\n    current = null;\r\n    this.props.callMeAgain();\r\n    \r\n  };\r\n\r\n  render() {\r\n    console.log(3);\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"A*\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AStar;\r\n"]},"metadata":{},"sourceType":"module"}