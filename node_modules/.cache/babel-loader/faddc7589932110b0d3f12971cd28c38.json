{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\TSP\\\\TSP.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport Point from \"./Point\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet points = [];\n\nclass TSP extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      points: []\n    };\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(500, 400).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      for (let i = 0; i < points.length; i++) {\n        p5.fill(points[i].r, points[i].g, points[i].b);\n        p5.ellipse(points[i].x, points[i].y, 20, 20);\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      points.push(new Point(x, y));\n      this.setState({\n        points\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      mousePressed: this.mousePressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TSP;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/TSP.js"],"names":["React","Sketch","Point","points","TSP","Component","state","setup","p5","parent","xyz","createCanvas","x","windowWidth","width","y","windowHeight","height","position","draw","background","i","length","fill","r","g","b","ellipse","mousePressed","e","mouseX","mouseY","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AAACH,MAAAA,MAAM,EAAG;AAAV,KADqB;;AAAA,SAG7BI,KAH6B,GAGrB,CAACC,EAAD,EAAKC,MAAL,KAAgB;AACpB,UAAIC,GAAG,GAAGF,EAAE,CAACG,YAAH,CAAgB,GAAhB,EAAqB,GAArB,EAA0BF,MAA1B,CAAiCA,MAAjC,CAAV;AACA,UAAIG,CAAC,GAAG,CAACJ,EAAE,CAACK,WAAH,GAAiBL,EAAE,CAACM,KAArB,IAA8B,CAAtC;AACA,UAAIC,CAAC,GAAG,CAACP,EAAE,CAACQ,YAAH,GAAkBR,EAAE,CAACS,MAAtB,IAAgC,CAAxC;AACAP,MAAAA,GAAG,CAACQ,QAAJ,CAAaN,CAAb,EAAgBG,CAAhB;AACH,KAR4B;;AAAA,SAU7BI,IAV6B,GAUrBX,EAAD,IAAQ;AACXA,MAAAA,EAAE,CAACY,UAAH,CAAc,CAAd;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGlB,MAAM,CAACmB,MAA3B,EAAoCD,CAAC,EAArC,EAAwC;AACpCb,QAAAA,EAAE,CAACe,IAAH,CAAQpB,MAAM,CAACkB,CAAD,CAAN,CAAUG,CAAlB,EAAqBrB,MAAM,CAACkB,CAAD,CAAN,CAAUI,CAA/B,EAAkCtB,MAAM,CAACkB,CAAD,CAAN,CAAUK,CAA5C;AACAlB,QAAAA,EAAE,CAACmB,OAAH,CAAWxB,MAAM,CAACkB,CAAD,CAAN,CAAUT,CAArB,EAAwBT,MAAM,CAACkB,CAAD,CAAN,CAAUN,CAAlC,EAAqC,EAArC,EAAyC,EAAzC;AACH;AACJ,KAhB4B;;AAAA,SAkB7Ba,YAlB6B,GAkBbC,CAAD,IAAO;AAClB,UAAIjB,CAAC,GAAGiB,CAAC,CAACC,MAAV;AACA,UAAIf,CAAC,GAAGc,CAAC,CAACE,MAAV;AACA5B,MAAAA,MAAM,CAAC6B,IAAP,CAAY,IAAI9B,KAAJ,CAAUU,CAAV,EAAaG,CAAb,CAAZ;AACA,WAAKkB,QAAL,CAAc;AAAC9B,QAAAA;AAAD,OAAd;AACH,KAvB4B;AAAA;;AAyB7B+B,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAK3B,KAApB;AAA2B,MAAA,IAAI,EAAE,KAAKY,IAAtC;AAA4C,MAAA,YAAY,EAAE,KAAKS;AAA/D;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA7B4B;;AAiCjC,eAAexB,GAAf","sourcesContent":["import React from 'react';\r\nimport Sketch from 'react-p5';\r\nimport Point from \"./Point\";\r\n\r\nlet points = [];\r\n\r\nclass TSP extends React.Component{    \r\n    state = {points : []};\r\n\r\n    setup = (p5, parent) => {\r\n        let xyz = p5.createCanvas(500, 400).parent(parent);\r\n        let x = (p5.windowWidth - p5.width) / 2;\r\n        let y = (p5.windowHeight - p5.height) / 2;\r\n        xyz.position(x, y);\r\n    };\r\n\r\n    draw = (p5) => {\r\n        p5.background(0);\r\n        for(let i = 0 ; i < points.length ; i++){\r\n            p5.fill(points[i].r, points[i].g, points[i].b);\r\n            p5.ellipse(points[i].x, points[i].y, 20, 20);\r\n        }\r\n    };\r\n     \r\n    mousePressed = (e) => {\r\n        let x = e.mouseX;\r\n        let y = e.mouseY;\r\n        points.push(new Point(x, y));\r\n        this.setState({points});\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <Sketch setup={this.setup} draw={this.draw} mousePressed={this.mousePressed}/>\r\n         );\r\n    }\r\n\r\n}\r\n\r\nexport default TSP;"]},"metadata":{},"sourceType":"module"}