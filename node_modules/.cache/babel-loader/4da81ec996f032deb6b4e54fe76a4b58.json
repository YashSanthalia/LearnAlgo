{"ast":null,"code":"class Cell {\n  constructor(_i, _j, _rows, _cols) {\n    this.checkNeighbours = () => {\n      const i = current.i;\n      const j = current.j;\n      let neighbours = [];\n      let top = grid[this.index(i, j - 1)];\n      let right = grid[this.index(i + 1, j)];\n      let bottom = grid[this.index(i, j + 1)];\n      let left = grid[this.index(i - 1, j)];\n      if (top && !top.visited) neighbours.push(top);\n      if (right && !right.visited) neighbours.push(right);\n      if (bottom && !bottom.visited) neighbours.push(bottom);\n      if (left && !left.visited) neighbours.push(left);\n\n      if (neighbours.length > 0) {\n        return neighbours[Math.floor(Math.random() * neighbours.length)];\n      } else return undefined;\n    };\n\n    this.index = (i, j) => {\n      if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n      return j * cols + i;\n    };\n\n    this.i = _i;\n    this.j = _j;\n    this.visited = false;\n    this.walls = [true, true, true, true];\n    this.rows = _rows;\n    this.cols = _cols;\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/BackTracking/Cell.js"],"names":["Cell","constructor","i","j","rows","cols","checkNeighbours","current","neighbours","top","grid","index","right","bottom","left","visited","push","length","Math","floor","random","undefined","walls"],"mappings":"AAAA,MAAMA,IAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,EAAD,EAAIC,EAAJ,EAAOC,KAAP,EAAaC,KAAb,EAAkB;AAAA,SAS7BC,eAT6B,GASX,MAAM;AACpB,YAAMJ,CAAC,GAAGK,OAAO,CAACL,CAAlB;AACA,YAAMC,CAAC,GAAGI,OAAO,CAACJ,CAAlB;AACA,UAAIK,UAAU,GAAG,EAAjB;AACA,UAAIC,GAAG,GAAGC,IAAI,CAAC,KAAKC,KAAL,CAAWT,CAAX,EAAcC,CAAC,GAAG,CAAlB,CAAD,CAAd;AACA,UAAIS,KAAK,GAAGF,IAAI,CAAC,KAAKC,KAAL,CAAWT,CAAC,GAAG,CAAf,EAAkBC,CAAlB,CAAD,CAAhB;AACA,UAAIU,MAAM,GAAGH,IAAI,CAAC,KAAKC,KAAL,CAAWT,CAAX,EAAcC,CAAC,GAAG,CAAlB,CAAD,CAAjB;AACA,UAAIW,IAAI,GAAGJ,IAAI,CAAC,KAAKC,KAAL,CAAWT,CAAC,GAAG,CAAf,EAAkBC,CAAlB,CAAD,CAAf;AACA,UAAIM,GAAG,IAAI,CAACA,GAAG,CAACM,OAAhB,EAAyBP,UAAU,CAACQ,IAAX,CAAgBP,GAAhB;AACzB,UAAIG,KAAK,IAAI,CAACA,KAAK,CAACG,OAApB,EAA6BP,UAAU,CAACQ,IAAX,CAAgBJ,KAAhB;AAC7B,UAAIC,MAAM,IAAI,CAACA,MAAM,CAACE,OAAtB,EAA+BP,UAAU,CAACQ,IAAX,CAAgBH,MAAhB;AAC/B,UAAIC,IAAI,IAAI,CAACA,IAAI,CAACC,OAAlB,EAA2BP,UAAU,CAACQ,IAAX,CAAgBF,IAAhB;;AAC3B,UAAIN,UAAU,CAACS,MAAX,GAAoB,CAAxB,EAA2B;AACzB,eAAOT,UAAU,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,UAAU,CAACS,MAAtC,CAAD,CAAjB;AACD,OAFD,MAEO,OAAOI,SAAP;AACR,KAxB0B;;AAAA,SA0B3BV,KA1B2B,GA0BnB,CAACT,CAAD,EAAIC,CAAJ,KAAU;AAChB,UAAID,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBD,CAAC,GAAGG,IAAI,GAAG,CAA7B,IAAkCF,CAAC,GAAGC,IAAI,GAAG,CAAjD,EAAoD,OAAO,CAAC,CAAR;AACpD,aAAOD,CAAC,GAAGE,IAAJ,GAAWH,CAAlB;AACD,KA7B0B;;AACzB,SAAKA,CAAL,GAAOA,EAAP;AACA,SAAKC,CAAL,GAAOA,EAAP;AACA,SAAKY,OAAL,GAAe,KAAf;AACA,SAAKO,KAAL,GAAa,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAb;AACA,SAAKlB,IAAL,GAAYA,KAAZ;AACA,SAAKC,IAAL,GAAYA,KAAZ;AACH;;AARK;;AAkCV,eAAeL,IAAf","sourcesContent":["class Cell{\r\n    constructor(i, j, rows, cols){\r\n        this.i=i;\r\n        this.j=j;\r\n        this.visited = false;\r\n        this.walls = [true, true, true, true];\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n    }\r\n\r\n    checkNeighbours = () => {\r\n        const i = current.i;\r\n        const j = current.j;\r\n        let neighbours = [];\r\n        let top = grid[this.index(i, j - 1)];\r\n        let right = grid[this.index(i + 1, j)];\r\n        let bottom = grid[this.index(i, j + 1)];\r\n        let left = grid[this.index(i - 1, j)];\r\n        if (top && !top.visited) neighbours.push(top);\r\n        if (right && !right.visited) neighbours.push(right);\r\n        if (bottom && !bottom.visited) neighbours.push(bottom);\r\n        if (left && !left.visited) neighbours.push(left);\r\n        if (neighbours.length > 0) {\r\n          return neighbours[Math.floor(Math.random() * neighbours.length)];\r\n        } else return undefined;\r\n      };\r\n\r\n      index = (i, j) => {\r\n        if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\r\n        return j * cols + i;\r\n      };\r\n    \r\n}\r\n\r\nexport default Cell;"]},"metadata":{},"sourceType":"module"}