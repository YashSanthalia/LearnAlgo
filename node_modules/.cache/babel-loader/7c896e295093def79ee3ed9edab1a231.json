{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\TSP\\\\TSP.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Point from \"./Point\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet points = [];\nconst width = 800;\nconst height = 500;\nlet minDistance = 9999999;\nlet minDistancePath = [];\nlet order = [];\n\nclass TSP extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stage: 0\n    };\n\n    this.setup = (p5, parent) => {\n      let xyz = p5.createCanvas(width, height).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      if (this.state.stage === 0) {\n        p5.noStroke();\n        p5.fill(255);\n        p5.noCursor();\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\n        order = [];\n\n        for (let i = 0; i < points.length; i++) {\n          order[i] = i;\n        }\n      }\n\n      this.showPoints(p5);\n\n      if (this.state.stage === 1) {\n        // let i = Math.floor(Math.random(1) * points.length);\n        // let j = Math.floor(Math.random(1) * points.length);\n        // this.swap(i , j);\n        this.showLines(points, p5, 255, 255, 255, 2);\n        let currentDistance = this.calcPathDistance(p5);\n\n        if (currentDistance < minDistance) {\n          minDistance = currentDistance;\n          minDistancePath = points.slice();\n          console.log(minDistance);\n        }\n\n        this.showLines(minDistancePath, p5, 255, 0, 255, 4);\n        this.nextOrder(p5);\n      }\n    };\n\n    this.calcPathDistance = p5 => {\n      let dist = 0;\n\n      for (let i = 1; i < points.length; i++) {\n        dist += p5.dist(points[i].x, points[i].y, points[i - 1].x, points[i - 1].y);\n      }\n\n      return dist;\n    };\n\n    this.nextOrder = p5 => {\n      var largestI = -1;\n\n      for (let i = 0; i < order.length - 1; i++) {\n        if (order[i] < order[i + 1]) {\n          largestI = i;\n        }\n      }\n\n      if (largestI == -1) {\n        p5.noLoop();\n        console.log(\"finished\");\n      }\n\n      var largestJ = -1;\n\n      for (let j = 0; j < order.length; j++) {\n        if (order[largestI] < order[j]) {\n          largestJ = j;\n        }\n      }\n\n      swap(order, largestI, largestJ);\n      var endArray = order.splice(largestI + 1);\n      endArray.reverse();\n      order = order.concat(endArray);\n    };\n\n    this.showLines = (points, p5, r, g, b, strokeWeight) => {\n      p5.beginShape();\n      p5.stroke(r, g, b);\n      p5.strokeWeight(strokeWeight);\n      p5.noFill();\n\n      for (let i = 0; i < order.length; i++) {\n        p5.vertex(points[order[i]].x, points[order[i]].y);\n      }\n\n      p5.endShape();\n    };\n\n    this.showPoints = p5 => {\n      for (let i = 0; i < points.length; i++) {\n        p5.fill(points[i].r, points[i].g, points[i].b);\n        p5.ellipse(points[i].x, points[i].y, 15, 15);\n      }\n    };\n\n    this.mousePressed = e => {\n      if (this.state.stage === 0) {\n        let x = e.mouseX;\n        let y = e.mouseY;\n\n        if (x > 0 && x < width && y > 0 && y < height) {\n          points.push(new Point(x, y));\n        }\n      }\n    };\n\n    this.onBackButtonClick = () => {\n      points = [];\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      points = [];\n      this.setState({\n        stage: 0\n      });\n    };\n\n    this.onStartButtonClick = () => {\n      this.setState({\n        stage: 1\n      });\n    };\n  }\n\n  swap(array, i, j) {\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick,\n        onStartButtonClick: this.onStartButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TSP;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/TSP.js"],"names":["React","Sketch","Point","NavBar","points","width","height","minDistance","minDistancePath","order","TSP","Component","state","stage","setup","p5","parent","xyz","createCanvas","x","windowWidth","y","windowHeight","position","draw","background","noStroke","fill","noCursor","ellipse","mouseX","mouseY","i","length","showPoints","showLines","currentDistance","calcPathDistance","slice","console","log","nextOrder","dist","largestI","noLoop","largestJ","j","swap","endArray","splice","reverse","concat","r","g","b","strokeWeight","beginShape","stroke","noFill","vertex","endShape","mousePressed","e","push","onBackButtonClick","props","onClearButtonClick","setState","onStartButtonClick","array","temp","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Point from \"./Point\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nlet points = [];\r\nconst width = 800;\r\nconst height = 500;\r\nlet minDistance = 9999999;\r\nlet minDistancePath = [];\r\nlet order = [];\r\n\r\nclass TSP extends React.Component {\r\n  state = { stage: 0 };\r\n\r\n  setup = (p5, parent) => {\r\n    let xyz = p5.createCanvas(width, height).parent(parent);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(0);\r\n    if (this.state.stage === 0) {\r\n      p5.noStroke();\r\n      p5.fill(255);\r\n      p5.noCursor();\r\n      p5.ellipse(p5.mouseX, p5.mouseY, 12);\r\n      order = [];\r\n      for (let i = 0; i < points.length; i++) {\r\n        order[i] = i;\r\n      }\r\n    }\r\n    this.showPoints(p5);\r\n    if (this.state.stage === 1) {\r\n      // let i = Math.floor(Math.random(1) * points.length);\r\n      // let j = Math.floor(Math.random(1) * points.length);\r\n      // this.swap(i , j);\r\n      this.showLines(points, p5, 255, 255, 255, 2);\r\n      let currentDistance = this.calcPathDistance(p5);\r\n      if (currentDistance < minDistance) {\r\n        minDistance = currentDistance;\r\n        minDistancePath = points.slice();\r\n        console.log(minDistance);\r\n      }\r\n      this.showLines(minDistancePath, p5, 255, 0, 255, 4);\r\n      this.nextOrder(p5);\r\n    }\r\n  };\r\n\r\n  calcPathDistance = (p5) => {\r\n    let dist = 0;\r\n    for (let i = 1; i < points.length; i++) {\r\n      dist += p5.dist(\r\n        points[i].x,\r\n        points[i].y,\r\n        points[i - 1].x,\r\n        points[i - 1].y\r\n      );\r\n    }\r\n    return dist;\r\n  };\r\n\r\n  nextOrder = (p5) => {\r\n    var largestI = -1;\r\n    for (let i = 0; i < order.length - 1; i++) {\r\n      if (order[i] < order[i + 1]) {\r\n        largestI = i;\r\n      }\r\n    }\r\n    if (largestI == -1) {\r\n      p5.noLoop();\r\n      console.log(\"finished\");\r\n    }\r\n    var largestJ = -1;\r\n    for (let j = 0; j < order.length; j++) {\r\n      if (order[largestI] < order[j]) {\r\n        largestJ = j;\r\n      }\r\n    }\r\n    swap(order, largestI, largestJ);\r\n    var endArray = order.splice(largestI + 1);\r\n    endArray.reverse();\r\n    order = order.concat(endArray);\r\n  };\r\n\r\n  swap(array, i, j) {\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  showLines = (points, p5, r, g, b, strokeWeight) => {\r\n    p5.beginShape();\r\n    p5.stroke(r, g, b);\r\n    p5.strokeWeight(strokeWeight);\r\n    p5.noFill();\r\n    for (let i = 0; i < order.length; i++) {\r\n      p5.vertex(points[order[i]].x, points[order[i]].y);\r\n    }\r\n    p5.endShape();\r\n  };\r\n\r\n  showPoints = (p5) => {\r\n    for (let i = 0; i < points.length; i++) {\r\n      p5.fill(points[i].r, points[i].g, points[i].b);\r\n      p5.ellipse(points[i].x, points[i].y, 15, 15);\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    if (this.state.stage === 0) {\r\n      let x = e.mouseX;\r\n      let y = e.mouseY;\r\n      if (x > 0 && x < width && y > 0 && y < height) {\r\n        points.push(new Point(x, y));\r\n      }\r\n    }\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    points = [];\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    points = [];\r\n    this.setState({ stage: 0 });\r\n  };\r\n\r\n  onStartButtonClick = () => {\r\n    this.setState({ stage: 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n          onStartButtonClick={this.onStartButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TSP;\r\n"]},"metadata":{},"sourceType":"module"}