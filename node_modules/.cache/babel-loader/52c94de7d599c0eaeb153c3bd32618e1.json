{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\BackTracking\\\\BackTracking.js\";\nimport React from \"react\";\nimport Cell from \"./Cell\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst side = 25;\nlet rows, cols;\nlet grid = [];\nlet current = null,\n    next = null,\n    start = null;\nlet stack = [];\nlet reLoad = false;\nlet solution = false;\n\nclass BackTracking extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null,\n      stage: 0\n    };\n\n    this.setup = (p5, canvasParentRef) => {\n      let xyz = p5.createCanvas(1200, 500).parent(canvasParentRef);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y);\n      p5.frameRate(100);\n      rows = p5.height / side;\n      cols = p5.width / side; // for (let j = 0; j < rows; j++) {\n      //   for (let i = 0; i < cols; i++) {\n      //     let cell = new Cell(i, j, rows, cols);\n      //     grid.push(cell);\n      //   }\n      // }\n    };\n\n    this.draw = p5 => {\n      if (!solution) {\n        p5.background(2);\n\n        for (let i = 0; i < grid.length; i++) {\n          let x = grid[i].i;\n          let y = grid[i].j;\n          x = x * side;\n          y = y * side;\n          p5.stroke(255);\n          p5.noFill();\n\n          if (grid[i].walls[0]) {\n            p5.line(x, y, x + side, y);\n          }\n\n          if (grid[i].walls[1]) {\n            p5.line(x + side, y, x + side, y + side);\n          }\n\n          if (grid[i].walls[2]) {\n            p5.line(x + side, y + side, x, y + side);\n          }\n\n          if (grid[i].walls[3]) {\n            p5.line(x, y + side, x, y);\n          }\n\n          if (start == grid[i]) {\n            p5.noStroke();\n            p5.fill(255, 0, 0);\n            p5.rect(x, y, side, side);\n          } else if (grid[i].visited) {\n            p5.noStroke();\n            p5.fill(46, 240, 113);\n            p5.rect(x, y, side, side);\n          }\n        }\n\n        if (current) {\n          current.visited = true;\n          p5.noStroke();\n          p5.fill(21, 42, 233);\n          p5.rect(current.i * side, current.j * side, side, side);\n          next = this.checkNeighbours();\n\n          if (next) {\n            stack.push(current);\n            this.removeWalls();\n            current = next;\n          } else if (stack.length > 0) {\n            current = stack.pop();\n          } else {\n            solution = true; // p5.noLoop();\n          }\n        }\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n\n      if (i >= 0 && j >= 0 && i < cols && j < rows) {\n        if (!this.state.start) this.setState({\n          start: grid[j * cols + i],\n          stage: 1\n        });\n      }\n    };\n\n    this.checkNeighbours = () => {\n      const i = current.i;\n      const j = current.j;\n      let neighbours = [];\n      let top = grid[this.index(i, j - 1)];\n      let right = grid[this.index(i + 1, j)];\n      let bottom = grid[this.index(i, j + 1)];\n      let left = grid[this.index(i - 1, j)];\n      if (top && !top.visited) neighbours.push(top);\n      if (right && !right.visited) neighbours.push(right);\n      if (bottom && !bottom.visited) neighbours.push(bottom);\n      if (left && !left.visited) neighbours.push(left);\n\n      if (neighbours.length > 0) {\n        return neighbours[Math.floor(Math.random() * neighbours.length)];\n      } else return undefined;\n    };\n\n    this.removeWalls = () => {\n      let x = current.i - next.i;\n      let y = current.j - next.j;\n\n      if (x < 0) {\n        current.walls[1] = false;\n        next.walls[3] = false;\n      } else if (x > 0) {\n        current.walls[3] = false;\n        next.walls[1] = false;\n      } else if (y > 0) {\n        current.walls[0] = false;\n        next.walls[2] = false;\n      } else if (y < 0) {\n        current.walls[2] = false;\n        next.walls[0] = false;\n      }\n    };\n\n    this.index = (i, j) => {\n      if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n      return j * cols + i;\n    };\n\n    this.onBackButtonClick = () => {\n      current = null;\n      next = null;\n      start = null;\n      stack = [];\n      reLoad = false;\n      solution = false;\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      reLoad = true;\n      this.setState({\n        start: null,\n        stage: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        let cell = new Cell(i, j, rows, cols);\n        grid.push(cell);\n      }\n    }\n\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      next = null;\n      stack = [];\n      reLoad = false;\n      solution = false;\n\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < cols; i++) {\n          let cell = new Cell(i, j, rows, cols);\n          grid.push(cell);\n        }\n      }\n    }\n\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BackTracking;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/BackTracking/BackTracking.js"],"names":["React","Cell","Sketch","NavBar","side","rows","cols","grid","current","next","start","stack","reLoad","solution","BackTracking","Component","state","stage","setup","p5","canvasParentRef","xyz","createCanvas","parent","x","windowWidth","width","y","windowHeight","height","position","frameRate","draw","background","i","length","j","stroke","noFill","walls","line","noStroke","fill","rect","visited","checkNeighbours","push","removeWalls","pop","mousePressed","e","mouseX","mouseY","Math","floor","setState","neighbours","top","index","right","bottom","left","random","undefined","onBackButtonClick","props","onClearButtonClick","componentDidMount","cell","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport Sketch from \"react-p5\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nconst side = 25;\r\nlet rows, cols;\r\nlet grid = [];\r\nlet current = null,\r\n  next = null,\r\n  start = null;\r\nlet stack = [];\r\nlet reLoad = false;\r\nlet solution = false;\r\n\r\nclass BackTracking extends React.Component {\r\n  state = { start: null, stage: 0 };\r\n\r\n  componentDidMount() {\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        let cell = new Cell(i, j, rows, cols);\r\n        grid.push(cell);\r\n      }\r\n    }\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (reLoad) {\r\n      next = null;\r\n      stack = [];\r\n      reLoad = false;\r\n      solution = false;\r\n      for (let j = 0; j < rows; j++) {\r\n        for (let i = 0; i < cols; i++) {\r\n          let cell = new Cell(i, j, rows, cols);\r\n          grid.push(cell);\r\n        }\r\n      }\r\n    }\r\n    current = this.state.start;\r\n    start = this.state.start;\r\n  }\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    let xyz = p5.createCanvas(1200, 500).parent(canvasParentRef);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    p5.frameRate(100);\r\n    rows = p5.height / side;\r\n    cols = p5.width / side;\r\n    // for (let j = 0; j < rows; j++) {\r\n    //   for (let i = 0; i < cols; i++) {\r\n    //     let cell = new Cell(i, j, rows, cols);\r\n    //     grid.push(cell);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  draw = (p5) => {\r\n    if (!solution) {\r\n      p5.background(2);\r\n      for (let i = 0; i < grid.length; i++) {\r\n        let x = grid[i].i;\r\n        let y = grid[i].j;\r\n        x = x * side;\r\n        y = y * side;\r\n        p5.stroke(255);\r\n        p5.noFill();\r\n        if (grid[i].walls[0]) {\r\n          p5.line(x, y, x + side, y);\r\n        }\r\n        if (grid[i].walls[1]) {\r\n          p5.line(x + side, y, x + side, y + side);\r\n        }\r\n        if (grid[i].walls[2]) {\r\n          p5.line(x + side, y + side, x, y + side);\r\n        }\r\n        if (grid[i].walls[3]) {\r\n          p5.line(x, y + side, x, y);\r\n        }\r\n        if (start == grid[i]) {\r\n          p5.noStroke();\r\n          p5.fill(255, 0, 0);\r\n          p5.rect(x, y, side, side);\r\n        } else if (grid[i].visited) {\r\n          p5.noStroke();\r\n          p5.fill(46, 240, 113);\r\n          p5.rect(x, y, side, side);\r\n        }\r\n      }\r\n      if (current) {\r\n        current.visited = true;\r\n        p5.noStroke();\r\n        p5.fill(21, 42, 233);\r\n        p5.rect(current.i * side, current.j * side, side, side);\r\n        next = this.checkNeighbours();\r\n        if (next) {\r\n          stack.push(current);\r\n          this.removeWalls();\r\n          current = next;\r\n        } else if (stack.length > 0) {\r\n          current = stack.pop();\r\n        } else {\r\n          solution = true;\r\n          // p5.noLoop();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / side);\r\n    let j = Math.floor(y / side);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows) {\r\n      if (!this.state.start)\r\n        this.setState({ start: grid[j * cols + i], stage: 1 });\r\n    }\r\n  };\r\n\r\n  checkNeighbours = () => {\r\n    const i = current.i;\r\n    const j = current.j;\r\n    let neighbours = [];\r\n    let top = grid[this.index(i, j - 1)];\r\n    let right = grid[this.index(i + 1, j)];\r\n    let bottom = grid[this.index(i, j + 1)];\r\n    let left = grid[this.index(i - 1, j)];\r\n    if (top && !top.visited) neighbours.push(top);\r\n    if (right && !right.visited) neighbours.push(right);\r\n    if (bottom && !bottom.visited) neighbours.push(bottom);\r\n    if (left && !left.visited) neighbours.push(left);\r\n    if (neighbours.length > 0) {\r\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\r\n    } else return undefined;\r\n  };\r\n\r\n  removeWalls = () => {\r\n    let x = current.i - next.i;\r\n    let y = current.j - next.j;\r\n    if (x < 0) {\r\n      current.walls[1] = false;\r\n      next.walls[3] = false;\r\n    } else if (x > 0) {\r\n      current.walls[3] = false;\r\n      next.walls[1] = false;\r\n    } else if (y > 0) {\r\n      current.walls[0] = false;\r\n      next.walls[2] = false;\r\n    } else if (y < 0) {\r\n      current.walls[2] = false;\r\n      next.walls[0] = false;\r\n    }\r\n  };\r\n\r\n  index = (i, j) => {\r\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\r\n    return j * cols + i;\r\n  };\r\n\r\n  onBackButtonClick = () => {\r\n    current = null;\r\n    next = null;\r\n    start = null;\r\n    stack = [];\r\n    reLoad = false;\r\n    solution = false;\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    reLoad = true;\r\n    this.setState({ start: null, stage: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BackTracking;\r\n"]},"metadata":{},"sourceType":"module"}