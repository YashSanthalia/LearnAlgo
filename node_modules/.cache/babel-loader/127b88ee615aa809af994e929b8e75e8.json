{"ast":null,"code":"var isObject = require('../internals/is-object');\n\nvar isArray = require('../internals/is-array');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\n\nmodule.exports = function (originalArray, length) {\n  var C;\n\n  if (isArray(originalArray)) {\n    C = originalArray.constructor; // cross-realm fallback\n\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n\n  return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/node_modules/core-js-pure/internals/array-species-create.js"],"names":["isObject","require","isArray","wellKnownSymbol","SPECIES","module","exports","originalArray","length","C","constructor","Array","prototype","undefined"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAArB;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIG,OAAO,GAAGD,eAAe,CAAC,SAAD,CAA7B,C,CAEA;AACA;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,aAAV,EAAyBC,MAAzB,EAAiC;AAChD,MAAIC,CAAJ;;AACA,MAAIP,OAAO,CAACK,aAAD,CAAX,EAA4B;AAC1BE,IAAAA,CAAC,GAAGF,aAAa,CAACG,WAAlB,CAD0B,CAE1B;;AACA,QAAI,OAAOD,CAAP,IAAY,UAAZ,KAA2BA,CAAC,KAAKE,KAAN,IAAeT,OAAO,CAACO,CAAC,CAACG,SAAH,CAAjD,CAAJ,EAAqEH,CAAC,GAAGI,SAAJ,CAArE,KACK,IAAIb,QAAQ,CAACS,CAAD,CAAZ,EAAiB;AACpBA,MAAAA,CAAC,GAAGA,CAAC,CAACL,OAAD,CAAL;AACA,UAAIK,CAAC,KAAK,IAAV,EAAgBA,CAAC,GAAGI,SAAJ;AACjB;AACF;;AAAC,SAAO,KAAKJ,CAAC,KAAKI,SAAN,GAAkBF,KAAlB,GAA0BF,CAA/B,EAAkCD,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAArD,CAAP;AACH,CAXD","sourcesContent":["var isObject = require('../internals/is-object');\r\nvar isArray = require('../internals/is-array');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\n\r\nvar SPECIES = wellKnownSymbol('species');\r\n\r\n// `ArraySpeciesCreate` abstract operation\r\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\r\nmodule.exports = function (originalArray, length) {\r\n  var C;\r\n  if (isArray(originalArray)) {\r\n    C = originalArray.constructor;\r\n    // cross-realm fallback\r\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\r\n    else if (isObject(C)) {\r\n      C = C[SPECIES];\r\n      if (C === null) C = undefined;\r\n    }\r\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}