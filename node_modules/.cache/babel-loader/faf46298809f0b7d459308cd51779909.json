{"ast":null,"code":"export function initializePopulation(population, order, populationSize) {\n  for (let i = 0; i < populationSize; i++) {\n    population[i] = shuffle(order);\n  }\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport function calcFitness(points, population, fitness) {}","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/TSP/GeneticAlgo.js"],"names":["initializePopulation","population","order","populationSize","i","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","calcFitness","points","fitness"],"mappings":"AAAA,OAAO,SAASA,oBAAT,CAA8BC,UAA9B,EAA0CC,KAA1C,EAAiDC,cAAjD,EAAgE;AACnE,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGD,cAApB,EAAqCC,CAAC,EAAtC,EAAyC;AACrCH,IAAAA,UAAU,CAACG,CAAD,CAAV,GAAgBC,OAAO,CAACH,KAAD,CAAvB;AACH;AACJ;;AAED,SAASG,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MAAiCC,cAAjC;AAAA,MAAiDC,WAAjD;;AACA,SAAO,MAAMH,YAAb,EAA2B;AACzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOH,KAAP;AACH;;AAED,OAAO,SAASQ,WAAT,CAAqBC,MAArB,EAA6Bd,UAA7B,EAAyCe,OAAzC,EAAiD,CAEvD","sourcesContent":["export function initializePopulation(population, order, populationSize){\r\n    for(let i = 0 ; i < populationSize ; i++){\r\n        population[i] = shuffle(order);\r\n    }\r\n}\r\n\r\nfunction shuffle(array) {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n}\r\n\r\nexport function calcFitness(points, population, fitness){\r\n\r\n}"]},"metadata":{},"sourceType":"module"}