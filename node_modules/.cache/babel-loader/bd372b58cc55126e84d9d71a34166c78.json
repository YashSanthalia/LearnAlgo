{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash santhalia\\\\Desktop\\\\React\\\\algo\\\\src\\\\AStar\\\\AStar.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"./Cell\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cols, rows;\nconst side = 20;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n    end = null,\n    current = null;\nlet noSolution = false;\nlet path = [];\n\nclass AStar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null,\n      end: null,\n      stage: 0\n    };\n\n    this.componentDidUpdate = () => {\n      console.log(3);\n      start = this.state.start;\n      end = this.state.end;\n      if (start) openSet.push(start);\n    };\n\n    this.componentDidMount = () => {\n      console.log(2);\n\n      for (let i = 0; i < cols; i++) {\n        grid[i] = new Array(rows);\n      }\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          grid[i][j] = new Cell(i, j, rows, cols);\n          grid[i][j].addNeighbours();\n        }\n      }\n\n      start = this.state.start;\n      end = this.state.end;\n      if (start) openSet.push(start);\n    };\n\n    this.setup = (p5, parent) => {\n      console.log(1);\n      let xyz = p5.createCanvas(1200, 500).parent(parent);\n      let x = (p5.windowWidth - p5.width) / 2;\n      let y = (p5.windowHeight - p5.height) / 2;\n      xyz.position(x, y); // p5.frameRate(5);\n\n      cols = p5.width / side;\n      rows = p5.height / side;\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n\n      if (start && end) {\n        if (openSet.length > 0) {\n          let lowestIndex = 0;\n\n          for (let i = 0; i < openSet.length; i++) {\n            if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n          }\n\n          current = openSet[lowestIndex];\n\n          if (current === end) {\n            p5.noLoop();\n          }\n\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n          let neighbours = current.neighbours;\n\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  neighbour.g = tempG;\n                  neighbour.prev = current;\n                  neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n                  neighbour.f = neighbour.g + neighbour.h;\n                }\n              } else {\n                neighbour.g = tempG;\n                openSet.push(neighbour);\n                neighbour.prev = current;\n                neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n                neighbour.f = neighbour.g + neighbour.h;\n              }\n            }\n          }\n        } else {\n          noSolution = true;\n          p5.noLoop();\n        }\n      }\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          let x = i * side;\n          let y = j * side;\n          p5.fill(255);\n          p5.stroke(0);\n\n          if (grid[i][j].wall) {\n            p5.fill(0);\n            p5.stroke(0);\n          }\n\n          if (grid[i][j] === start) {\n            p5.fill(233, 222, 21);\n          }\n\n          if (grid[i][j] === end) {\n            p5.fill(228, 31, 4);\n          }\n\n          p5.rect(x, y, side, side);\n        }\n      }\n\n      for (let i = 0; i < openSet.length; i++) {\n        let x = openSet[i].i;\n        let y = openSet[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(139, 237, 151);\n        p5.stroke(0);\n\n        if (openSet[i] === start) {\n          p5.fill(233, 222, 21);\n        }\n\n        if (openSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n\n      for (let i = 0; i < closedSet.length; i++) {\n        let x = closedSet[i].i;\n        let y = closedSet[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(4, 228, 226);\n        p5.stroke(0);\n\n        if (closedSet[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (closedSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      for (let i = 0; i < path.length; i++) {\n        let x = path[i].i;\n        let y = path[i].j;\n        x = x * side;\n        y = y * side;\n        p5.fill(0, 0, 255);\n        p5.stroke(0);\n\n        if (path[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (path[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n\n        p5.rect(x, y, side, side);\n      }\n    };\n\n    this.mousePressed = e => {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      let i = Math.floor(x / side);\n      let j = Math.floor(y / side);\n\n      if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n        if (!this.state.start) this.setState({\n          start: grid[i][j],\n          stage: 1\n        });else if (!this.state.end) this.setState({\n          end: grid[i][j],\n          stage: 2\n        });\n      }\n    };\n\n    this.onBackButtonClick = () => {\n      this.onClearButtonClick();\n      this.props.onBackButtonClick();\n    };\n\n    this.onClearButtonClick = () => {\n      openSet = [];\n      closedSet = [];\n      noSolution = false;\n      path = [];\n      current = null;\n      this.setState({\n        start: null,\n        end: null,\n        stage: 0\n      });\n    };\n  }\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  heuristic(i, j) {\n    let x = this.state.end.i - i;\n    let y = this.state.end.j - j;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        stage: this.state.stage,\n        algo: \"A*\",\n        onBackButtonClick: this.onBackButtonClick,\n        onClearButtonClick: this.onClearButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        mousePressed: this.mousePressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AStar;","map":{"version":3,"sources":["C:/Users/yash santhalia/Desktop/React/algo/src/AStar/AStar.js"],"names":["React","Sketch","Cell","NavBar","cols","rows","side","grid","Array","openSet","closedSet","start","end","current","noSolution","path","AStar","Component","state","stage","componentDidUpdate","console","log","push","componentDidMount","i","j","addNeighbours","setup","p5","parent","xyz","createCanvas","x","windowWidth","width","y","windowHeight","height","position","draw","background","length","lowestIndex","f","noLoop","removeFromArray","neighbours","neighbour","includes","wall","tempG","g","prev","h","heuristic","fill","stroke","rect","mousePressed","e","mouseX","mouseY","Math","floor","setState","onBackButtonClick","onClearButtonClick","props","array","element","splice","sqrt","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport Cell from \"./Cell\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nlet cols, rows;\r\nconst side = 20;\r\nlet grid = new Array(cols);\r\nlet openSet = [];\r\nlet closedSet = [];\r\nlet start = null,end = null,current = null;\r\nlet noSolution = false;\r\nlet path = [];\r\n\r\nclass AStar extends React.Component {\r\n  state = { start: null, end: null, stage: 0 };\r\n\r\n  componentDidUpdate = () => {\r\n    console.log(3);\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    console.log(2);\r\n    for (let i = 0; i < cols; i++) {\r\n      grid[i] = new Array(rows);\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        grid[i][j] = new Cell(i, j, rows, cols);\r\n        grid[i][j].addNeighbours();\r\n      }\r\n    }\r\n    start = this.state.start;\r\n    end = this.state.end;\r\n    if (start) openSet.push(start);\r\n  };\r\n\r\n  setup = (p5, parent) => {\r\n    console.log(1);\r\n    let xyz = p5.createCanvas(1200, 500).parent(parent);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    // p5.frameRate(5);\r\n    cols = p5.width / side;\r\n    rows = p5.height / side;\r\n  };\r\n\r\n  draw = (p5) => {\r\n    p5.background(0);\r\n    if (start && end) {\r\n      if (openSet.length > 0) {\r\n        let lowestIndex = 0;\r\n        for (let i = 0; i < openSet.length; i++) {\r\n          if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\r\n        }\r\n        current = openSet[lowestIndex];\r\n        if (current === end) {\r\n          p5.noLoop();\r\n        }\r\n        this.removeFromArray(openSet, current);\r\n        closedSet.push(current);\r\n\r\n        let neighbours = current.neighbours;\r\n        for (let i = 0; i < neighbours.length; i++) {\r\n          let [x, y] = neighbours[i];\r\n          let neighbour = grid[x][y];\r\n          if (!closedSet.includes(neighbour) && !neighbour.wall) {\r\n            let tempG = current.g + 1;\r\n            if (openSet.includes(neighbour)) {\r\n              if (tempG < neighbour.g) {\r\n                neighbour.g = tempG;\r\n                neighbour.prev = current;\r\n                neighbour.h = this.heuristic(neighbour.i, neighbour.j);\r\n                neighbour.f = neighbour.g + neighbour.h;\r\n              }\r\n            } else {\r\n              neighbour.g = tempG;\r\n              openSet.push(neighbour);\r\n              neighbour.prev = current;\r\n              neighbour.h = this.heuristic(neighbour.i, neighbour.j);\r\n              neighbour.f = neighbour.g + neighbour.h;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        noSolution = true;\r\n        p5.noLoop();\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n      for (let j = 0; j < rows; j++) {\r\n        let x = i * side;\r\n        let y = j * side;\r\n        p5.fill(255);\r\n        p5.stroke(0);\r\n        if (grid[i][j].wall) {\r\n          p5.fill(0);\r\n          p5.stroke(0);\r\n        }\r\n        if (grid[i][j] === start) {\r\n          p5.fill(233, 222, 21);\r\n        }\r\n        if (grid[i][j] === end) {\r\n          p5.fill(228, 31, 4);\r\n        }\r\n        p5.rect(x, y, side, side);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < openSet.length; i++) {\r\n      let x = openSet[i].i;\r\n      let y = openSet[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(139, 237, 151);\r\n      p5.stroke(0);\r\n      if (openSet[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      }\r\n      if (openSet[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n\r\n    for (let i = 0; i < closedSet.length; i++) {\r\n      let x = closedSet[i].i;\r\n      let y = closedSet[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(4, 228, 226);\r\n      p5.stroke(0);\r\n      if (closedSet[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      } else if (closedSet[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n\r\n    if (!noSolution && current) {\r\n      path = [];\r\n      path.push(current);\r\n      while (current.prev) {\r\n        path.push(current.prev);\r\n        current = current.prev;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      let x = path[i].i;\r\n      let y = path[i].j;\r\n      x = x * side;\r\n      y = y * side;\r\n      p5.fill(0, 0, 255);\r\n      p5.stroke(0);\r\n      if (path[i] === start) {\r\n        p5.fill(233, 222, 21);\r\n      } else if (path[i] === end) {\r\n        p5.fill(228, 31, 4);\r\n      }\r\n      p5.rect(x, y, side, side);\r\n    }\r\n  };\r\n\r\n  mousePressed = (e) => {\r\n    let x = e.mouseX;\r\n    let y = e.mouseY;\r\n    let i = Math.floor(x / side);\r\n    let j = Math.floor(y / side);\r\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\r\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\r\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\r\n    }\r\n  };\r\n\r\n  removeFromArray(array, element) {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      if (array[i] === element) array.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  heuristic(i, j) {\r\n    let x = this.state.end.i - i;\r\n    let y = this.state.end.j - j;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  onBackButtonClick = () => {\r\n    this.onClearButtonClick();\r\n    this.props.onBackButtonClick();\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    openSet = [];\r\n    closedSet = [];\r\n    noSolution = false;\r\n    path = [];\r\n    current = null;\r\n    this.setState({ start: null, end: null, stage: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          stage={this.state.stage}\r\n          algo=\"A*\"\r\n          onBackButtonClick={this.onBackButtonClick}\r\n          onClearButtonClick={this.onClearButtonClick}\r\n        />\r\n        <Sketch\r\n          setup={this.setup}\r\n          draw={this.draw}\r\n          mousePressed={this.mousePressed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AStar;\r\n"]},"metadata":{},"sourceType":"module"}